{"version":3,"sources":["components/AreaChart.js","components/MapStates.js","components/MapLocations.js","components/MapSlider.js","components/StackedBarChart.js","components/BarChart.js","components/BubbleChart.js","components/BarChartMentalIllness.js","components/BubbleChartWeapons.js","App.js","serviceWorker.js","index.js"],"names":["AreaChart","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","data","getDatesToShootingsCountMap","x","d","Date","year","y","count","margin","left","top","bottom","right","width","height","bg","xMax","yMax","xScale","scaleTime","range","domain","map","yScale","scaleLinear","Math","max","apply","toConsumableArray","nice","yearToNumMap","reduce","r","Year","dataForAreaChart","_arr","keys","_i","length","yearToNum","push","_this2","react_default","a","createElement","className","fill","rx","vx_gradient_es","id","from","to","vertical","fromOpacity","toOpacity","vx_grid_es","stroke","strokeOpacity","vx_group_es","vx_shape_es","y0","y1","strokeWidth","curve","curveBasis","vx_axis_es","scale","hideZero","numTicks","numTicksForHeight","label","labelProps","textAnchor","fontSize","fontFamily","tickStroke","tickLabelProps","value","index","dx","dy","tickComponent","_ref","formattedValue","tickProps","objectWithoutProperties","numTicksForWidth","axis","axisCenter","axisToPoint","axisFromPoint","ticks","tick","i","tickX","tickY","tickLength","key","concat","transform","Component","MapStates","us","topology","names","stateToVictimsCount","stateNames","forEach","name","toLowerCase","o","State","parseInt","colorDomain","Set","values","stateColor","scaleQuantize","map_svg","d3","projection","path","states","topojson","objects","features","selectAll","enter","append","attr","style","centroid","text","MapLocations","locationToShootingsCount","Location","locationToVictimsCount","circleColor","parseFloat","toString","split","s","charAt","toUpperCase","substring","join","StepSlider","state","handleChange","event","setState","changeMap","Slider_default","min","step","onChange","marginTop","React","StackedBarChart","brown1","brown2","majorStates","includes","filter","totals","scaleBand","padding","color","scaleOrdinal","tooltipTimeout","rangeRound","position","xOffset","bandwidth","barStacks","barStack","bars","bar","onClick","alert","JSON","stringify","purple3","display","justifyContent","vx_legend_es","direction","labelMargin","withTooltip","BarChart","mapIndex","ageToNumberOfShootings","age","number","ageToNumberOfVictims","ageRanges","ageToNumberOfShootingsBinned","obj","ageIndex","floor","ageRange","ageToNumberOfVictimsBinned","_arr2","_i2","colorScale","brighter","darker","barWidth","barHeight","barX","barY","_ref2","BubbleChartRace","bubbleClick","console","log","legendClick","trim","xMin","lib_default","marginLeft","showLegend","legendPercentage","legendFont","family","size","valueFont","labelFont","bubbleClickFunc","legendClickFun","BarChartMentalIllness","motiveToNumberOfShootings","motive","sort","b","opacity","fontWeight","BubbleChartWeapons","App","getCSVData","0","components_MapStates","1","components_MapLocations","getMap","then","csvData","objectVals","datum","moment","utc","round","add","cleanDatum","alignItems","float","Typography_default","variant","marginBottom","components_AreaChart","MapSlider","classes","root","bind","components_StackedBarChart","components_BarChart","BubbleChart","components_BarChartMentalIllness","components_BubbleChartWeapons","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"8VA4MeA,cAnMb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,KAAOP,EAAKQ,4BAA4BR,EAAKD,MAAMQ,MAExDP,EAAKS,EAAI,SAAAC,GAAC,OAAI,IAAIC,KAAKD,EAAEE,OACzBZ,EAAKa,EAAI,SAAAH,GAAC,OAAIA,EAAEI,OAChBd,EAAKe,OAAS,CACZC,KAAM,GACNC,IAAK,GACLC,OAAQ,GACRC,MAAO,IAETnB,EAAKoB,MAAQ,IACbpB,EAAKqB,OAAS,IACdrB,EAAKsB,GAAK,UAEVtB,EAAKuB,KAAOvB,EAAKoB,MAAQpB,EAAKe,OAAOC,KAAOhB,EAAKe,OAAOI,MACxDnB,EAAKwB,KAAOxB,EAAKqB,OAASrB,EAAKe,OAAOE,IAAMjB,EAAKe,OAAOG,OAGxDlB,EAAKyB,OAASC,YAAU,CACtBC,MAAO,CAAC,EAAG3B,EAAKuB,KAAO,GACvBK,OAAQ5B,EAAKO,KAAKsB,IAAI7B,EAAKS,KAE7BT,EAAK8B,OAASC,YAAY,CACxBJ,MAAO,CAAC3B,EAAKwB,KAAM,GACnBI,OAAQ,CAAC,EAAGI,KAAKC,IAALC,MAAAF,KAAI/B,OAAAkC,EAAA,EAAAlC,CAAQD,EAAKO,KAAKsB,IAAI7B,EAAKa,MAC3CuB,MAAM,IA3BSpC,iFAgCDqB,GAChB,OAAIA,GAAU,IAAY,EACtB,IAAMA,GAAUA,GAAU,IAAY,EACnC,4CAGQD,GACf,OAAIA,GAAS,IAAY,EACrB,IAAMA,GAASA,GAAS,IAAY,EACjC,uDAGmBb,GAM1B,IALA,IAAM8B,EAAe9B,EAAK+B,OAAO,SAACC,EAAG7B,GAEnC,OADA6B,EAAE7B,EAAE8B,MAAQD,EAAE7B,EAAE8B,MAAQD,EAAE7B,EAAE8B,MAAQ,EAAI,EACjCD,GACN,IACGE,EAAmB,GALOC,EAMfzC,OAAO0C,KAAKN,GAA7BO,EAAA,EAAAA,EAAAF,EAAAG,OAAAD,IAA4C,CAAvC,IAAIhC,EAAI8B,EAAAE,GACLE,EAAY,CAChBlC,KAAMA,EACNE,MAAOuB,EAAazB,IAEtB6B,EAAiBM,KAAKD,GAExB,OAAOL,mCAKA,IAAAO,EAAA7C,KACP,OACE8C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,+DACAF,EAAAC,EAAAC,cAAA,OAAK/B,MAAOjB,KAAKiB,MAAOC,OAAQlB,KAAKkB,QACnC4B,EAAAC,EAAAC,cAAA,QAAM1C,EAAG,EAAGI,EAAG,EAAGO,MAAOjB,KAAKiB,MAAOC,OAAQlB,KAAKkB,OAAQgC,KAAMlD,KAAKmB,GAAIgC,GAAI,KAC7EL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACEC,GAAG,SACHC,KAAK,UACLC,GAAG,UACHC,UAAU,EACVC,YAAa,GACbC,UAAW,IAEbZ,EAAAC,EAAAC,cAACW,EAAA,EAAD,CACE7C,IAAKd,KAAKY,OAAOE,IACjBD,KAAMb,KAAKY,OAAOC,KAClBS,OAAQtB,KAAKsB,OACbK,OAAQ3B,KAAK2B,OACbV,MAAOjB,KAAKiB,MACZC,OAAQlB,KAAKqB,KACbuC,OAAQ,QACRC,cAAe,KAGjBf,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAOhD,IAAKd,KAAKY,OAAOE,IAAKD,KAAMb,KAAKY,OAAOC,MAC7CiC,EAAAC,EAAAC,cAACe,EAAA,EAAD,CACE3D,KAAMJ,KAAKI,KACXE,EAAG,SAAAC,GAAC,OAAIsC,EAAKvB,OAAOuB,EAAKvC,EAAEC,KAC3ByD,GAAI,SAAAzD,GAAC,OAAIsC,EAAKlB,OAAOH,QAAQ,IAC7ByC,GAAI,SAAA1D,GAAC,OAAIsC,EAAKlB,OAAOkB,EAAKnC,EAAEH,KAC5B2D,YAAa,EACbN,OAAQ,cACRV,KAAM,eACNiB,MAAOC,MAETtB,EAAAC,EAAAC,cAACe,EAAA,EAAD,CACE3D,KAAMJ,KAAKI,KACXE,EAAG,SAAAC,GAAC,OAAIsC,EAAKvB,OAAOuB,EAAKvC,EAAEC,KAC3BG,EAAG,SAAAH,GAAC,OAAIsC,EAAKlB,OAAOkB,EAAKnC,EAAEH,KAC3BqD,OAAQ,iBACRM,YAAa,EACbC,MAAOC,OAGXtB,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAOjD,KAAMb,KAAKY,OAAOC,MACvBiC,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CACEvD,IAAKd,KAAKY,OAAOE,IACjBD,KAAM,EACNyD,MAAOtE,KAAK2B,OACZ4C,UAAQ,EACRC,SAAUxE,KAAKyE,kBAAkBzE,KAAKkB,QACtCwD,MAAM,sBACNC,WAAY,CACVzB,KAAM,UACN0B,WAAY,SACZC,SAAU,GACVC,WAAY,SAEdlB,OAAO,UACPmB,WAAW,UACXC,eAAgB,SAACC,EAAOC,GAAR,MAAmB,CACjChC,KAAM,UACN0B,WAAY,MACZC,SAAU,GACVC,WAAY,QACZK,GAAI,UACJC,GAAI,WAENC,cAAe,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,eAAmBC,EAAtB1F,OAAA2F,EAAA,EAAA3F,CAAAwF,EAAA,2BACbxC,EAAAC,EAAAC,cAAA,OAAUwC,EAAYD,MAI1BzC,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CACEvD,IAAKd,KAAKkB,OAASlB,KAAKY,OAAOG,OAC/BF,KAAM,EACNyD,MAAOtE,KAAKsB,OACZkD,SAAUxE,KAAK0F,iBAAiB1F,KAAKiB,OACrC2C,OAAO,UACPc,MAAM,QAEL,SAAAiB,GACC,IAGMC,EACJD,EAAKE,YAAYvF,EAAIqF,EAAKG,cAAcxF,EAAI,IAC9C,OACEwC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,yBACV0C,EAAKI,MAAMrE,IAAI,SAACsE,EAAMC,GACrB,IAAMC,EAAQF,EAAKzC,GAAGjD,EAChB6F,EAAQH,EAAKzC,GAAG7C,EATN,GAS0BiF,EAAKS,WAC/C,OACEtD,EAAAC,EAAAC,cAACc,EAAA,EAAD,CACEuC,IAAG,WAAAC,OAAaN,EAAKf,MAAlB,KAAAqB,OAA2BL,GAC9BhD,UAAW,gBAEXH,EAAAC,EAAAC,cAACe,EAAA,EAAD,CACET,KAAM0C,EAAK1C,KACXC,GAAIyC,EAAKzC,GACTK,OAhBM,YAkBRd,EAAAC,EAAAC,cAAA,QACEuD,UAAS,aAAAD,OAAeJ,EAAf,MAAAI,OAAyBH,EAAzB,aAAAG,OApBF,GAoBE,KACTzB,SAtBU,GAuBVD,WAAW,SACX1B,KAtBM,WAwBL8C,EAAKT,mBAKdzC,EAAAC,EAAAC,cAAA,QACE4B,WAAW,SACX2B,UAAS,aAAAD,OAAeV,EAAf,SACTf,SAAS,KACT3B,KAAK,WAEJyC,EAAKjB,oBAvLJ8B,6CCmFTC,cAnFb,SAAAA,EAAY7G,GAAO,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAyG,IACjB5G,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2G,GAAAtG,KAAAH,KAAMJ,KACDqB,MAAQ,IACbpB,EAAKqB,OAAS,IACdrB,EAAK6G,GAAKC,EACV9G,EAAKO,KAAOP,EAAKD,MAAMQ,KAEvBP,EAAK+G,MAAQ,GACb/G,EAAKgH,oBAAsB,GAC3BC,EAAWC,QAAQ,SAAAxG,GACjBV,EAAK+G,MAAMrG,EAAEyG,KAAKC,eAAiB1G,EAAE8C,GACrCxD,EAAK+G,MAAMrG,EAAE8C,IAAM9C,EAAEyG,KAAKC,cAC1BpH,EAAKgH,oBAAoBtG,EAAE8C,IAAM,IAEnCxD,EAAKgH,oBAAsBhH,EAAKO,KAAK+B,OAAO,SAACC,EAAG8E,GAE9C,OADA9E,EAAEvC,EAAK+G,MAAMM,EAAEC,QAAU/E,EAAEvC,EAAK+G,MAAMM,EAAEC,QAAS/E,EAAEvC,EAAK+G,MAAMM,EAAEC,QAAUC,SAASF,EAAE,4BAA6BE,SAASF,EAAE,4BACtH9E,GACNvC,EAAKgH,qBACR,IAAMQ,EAAc,CAAC,EAAGxF,KAAKC,IAALC,MAAAF,KAAI/B,OAAAkC,EAAA,EAAAlC,CAAQ,IAAIwH,IAAIxH,OAAOyH,OAAO1H,EAAKgH,yBAlB9C,OAmBjBhH,EAAK2H,WAAaC,YAAc,CAC9BhG,OAAQ4F,EAGR7F,MAAO,CACL,UACA,UACA,UACA,UACA,UACA,UACA,aA9Ba3B,mFAoCC,IAAAgD,EAAA7C,KAEd0H,EAAUC,IAAU,oBACpBC,EAAaD,MACbE,EAAOF,MAAaC,WAAWA,GAC7BE,EAASC,IAAiB/H,KAAK0G,GAAI1G,KAAK0G,GAAGsB,QAAQF,QAAQG,SACjEL,EAAWtD,MAAM,KAEjBoD,EACGQ,UAAU,QACV9H,KAAK0H,GACLK,QACAC,OAAO,QACPC,KAAK,QAAS,WACdC,MAAM,OAAQ,SAAA/H,GAAC,OAAIsC,EAAK2E,WAAW3E,EAAKgE,oBAAoBtG,EAAE8C,OAC9DiF,MAAM,SAAU,SAChBA,MAAM,eAAgB,OACtBD,KAAK,IAAKR,GAEbH,EACGU,OAAO,KACPC,KAAK,QAAS,UAEjBX,EACGQ,UAAU,WACV9H,KAAK0H,GACLK,QACAC,OAAO,QACPC,KAAK,YAAa,SAAA9H,GAAC,mBAAA+F,OAAiBuB,EAAKU,SAAShI,GAA/B,OACnB+H,MAAM,cAAe,UACrBA,MAAM,YAAa,KAKnBE,KAAK,SAAAjI,GAAC,OAAIsC,EAAKgE,oBAAoBtG,EAAE8C,IAAMR,EAAKgE,oBAAoBtG,EAAE8C,IAAK,uCAG9E,OACEP,EAAAC,EAAAC,cAAA,OAAKK,GAAG,WAAWJ,UAAU,oBAC3BH,EAAAC,EAAAC,cAAA,+DACAF,EAAAC,EAAAC,cAAA,OAAKK,GAAG,kBAAkBpC,MAAOjB,KAAKiB,MAAOC,OAAQlB,KAAKkB,iBA9E1CsF,aC+ETiC,cA/Eb,SAAAA,EAAY7I,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAyI,IACjB5I,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2I,GAAAtI,KAAAH,KAAMJ,KACDqB,MAAQ,IACbpB,EAAKqB,OAAS,IACdrB,EAAK6G,GAAKC,EACV9G,EAAKO,KAAOP,EAAKD,MAAMQ,KACvBP,EAAK6I,yBAA2B7I,EAAKO,KAAK+B,OAAO,SAACC,EAAG8E,GAEnD,OADA9E,EAAE8E,EAAEyB,UAAYvG,EAAE8E,EAAEyB,UAAYvG,EAAE8E,EAAEyB,UAAY,EAAI,EAC7CvG,GACN,IACHvC,EAAK+I,uBAAyB/I,EAAKO,KAAK+B,OAAO,SAACC,EAAG8E,GAEjD,OADA9E,EAAE8E,EAAEyB,UAAYvG,EAAE8E,EAAEyB,UAAWvG,EAAE8E,EAAEyB,UAAYvB,SAASF,EAAE,4BAA6BE,SAASF,EAAE,4BAC3F9E,GACN,IACHvC,EAAKgJ,YAAcpB,YAAc,CAC/BhG,OAAM,CAAG,GAAH6E,OAAAxG,OAAAkC,EAAA,EAAAlC,CAAS,IAAIwH,IAAIxH,OAAOyH,OAAO1H,EAAK+I,2BAC1CpH,MAAOmG,IAAc,KAhBN9H,mFAoBC,IAAAgD,EAAA7C,KAEd0H,EAAUC,IAAU,uBACpBC,EAAaD,MACbE,EAAOF,MAAaC,WAAWA,GAC7BE,EAASC,IAAiB/H,KAAK0G,GAAI1G,KAAK0G,GAAGsB,QAAQF,QAAQG,SACjEL,EAAWtD,MAAM,KAEjBoD,EACGQ,UAAU,QACV9H,KAAK0H,GACLK,QACAC,OAAO,QACPC,KAAK,QAAS,WACdC,MAAM,OAAQ,aACdA,MAAM,SAAU,SAChBA,MAAM,eAAgB,OACtBD,KAAK,IAAKR,GAEbH,EACGQ,UAAU,UACV9H,KAAKJ,KAAKI,MACV+H,QACAC,OAAO,UACPC,KAAK,KAAM,SAAS9H,GACnB,OAAOqH,EAAW,CAChBkB,WAAWvI,EAAC,WACZuI,WAAWvI,EAAC,YACX,KAEJ8H,KAAK,KAAM,SAAS9H,GACnB,OAAOqH,EAAW,CAChBkB,WAAWvI,EAAC,WACZuI,WAAWvI,EAAC,YACX,KAEJ8H,KAAK,IAAK,SAAA9H,GACT,OAAmE,EAA3DuI,WAAWjG,EAAK6F,yBAAyBnI,EAAC,YAAoBwI,WAAa,OAEpFV,KAAK,OAAQ,SAAA9H,GAAC,OAAIsC,EAAKgG,YAAYhG,EAAK+F,uBAAuBrI,EAAC,aAChE+H,MAAM,eAAgB,KACtBF,OAAO,SACPI,KAAK,SAAAjI,GACJ,SAAA+F,OAAU/F,EAAC,SAAayI,MAAM,KAC7BtH,IAAI,SAACuH,GAAD,OAAOA,EAAEC,OAAO,GAAGC,cAAgBF,EAAEG,UAAU,KACnDC,KAAK,KAFN,iBAAA/C,OAE0BzD,EAAK6F,yBAAyBnI,EAAC,UAFzD,eAAA+F,OAEoFzD,EAAK+F,uBAAuBrI,EAAC,8CAKrH,OACEuC,EAAAC,EAAAC,cAAA,OAAKK,GAAG,WAAWJ,UAAU,oBAC7BH,EAAAC,EAAAC,cAAA,wFACEF,EAAAC,EAAAC,cAAA,OAAKK,GAAG,qBAAqBpC,MAAOjB,KAAKiB,MAAOC,OAAQlB,KAAKkB,iBA1E1CsF,8BCyBZ8C,6MA3BbC,MAAQ,CACNtE,MAAO,KAGTuE,aAAe,SAACC,EAAOxE,GACrBpF,EAAK6J,SAAS,CAAEzE,UAChBpF,EAAKD,MAAM+J,UAAU1E,4EAGd,IACCA,EAAUjF,KAAKuJ,MAAftE,MACR,OACEnC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,KAAGsF,MAAO,CAACzD,SAAS,UAApB,2DACA/B,EAAAC,EAAAC,cAAC4G,EAAA7G,EAAD,CACEkC,MAAOA,EACP4E,IAAK,EACL/H,IAAK,EACLgI,KAAM,EACNC,SAAU/J,KAAKwJ,aACflB,MAAO,CAACrH,MAAO,OAAQL,OAAQ,SAAUoJ,UAAW,kBArBrCC,IAAMzD,2BCMzB0D,cACJ,SAAAA,EAAYtK,GAAO,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkK,IACjBrK,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAoK,GAAA/J,KAAAH,KAAMJ,KAEDuK,OAAS,UACdtK,EAAKuK,OAAS,UAEdvK,EAAKsB,GAAK,UAEV,IAAMkJ,EAAc,CAAC,aAAc,UAAW,QAAS,WAAY,UAAW,YAC9ExK,EAAKO,KAAOP,EAAKD,MAAMQ,KAAK+B,OAAO,SAACC,EAAG8E,GAcnC,OAbGmD,EAAYC,SAASpD,EAAEC,SAClB/E,EAAE8E,EAAEC,QAQJ/E,EAAE8E,EAAEC,OAAJ,oBAAoC/E,EAAE8E,EAAEC,OAAJ,oBAAoCC,SAASF,EAAE,kCACnF9E,EAAE8E,EAAEC,OAAJ,iBAAiC/E,EAAE8E,EAAEC,OAAJ,iBAAiCC,SAASF,EAAE,iCAR7E9E,EAAE8E,EAAEC,OAAS,GACb/E,EAAE8E,EAAEC,OAAJ,MAAsBD,EAAEC,MAAM6B,MAAM,KACnCtH,IAAI,SAACuH,GAAD,OAAOA,EAAEC,OAAO,GAAGC,cAAgBF,EAAEG,UAAU,KACnDC,KAAK,KACNjH,EAAE8E,EAAEC,OAAJ,oBAAoCC,SAASF,EAAE,kCAC/C9E,EAAE8E,EAAEC,OAAJ,iBAAiCC,SAASF,EAAE,iCAM7C9E,GACR,IACHvC,EAAKO,KAAON,OAAOyH,OAAO1H,EAAKO,MAC/BP,EAAK2C,KAAO1C,OAAO0C,KAAK3C,EAAKO,KAAK,IAAImK,OAAO,SAAAhK,GAAC,MAAU,UAANA,GAAuB,kBAANA,IAEnE,IAAMiK,EAAS3K,EAAKO,KAAKsB,IAAI,SAAAnB,GAAC,OAAIA,EAAC,iBAAuBA,EAAC,sBA5B1C,OA8BjBV,EAAKS,EAAI,SAAAC,GAAC,OAAIA,EAAEgJ,OAGhB1J,EAAKyB,OAASmJ,YAAU,CACtBhJ,OAAQ5B,EAAKO,KAAKsB,IAAI7B,EAAKS,GAC3BoK,QAAS,KAEX7K,EAAK8B,OAASC,YAAY,CACxBH,OAAQ,CAAC,EAAGI,KAAKC,IAALC,MAAAF,KAAI/B,OAAAkC,EAAA,EAAAlC,CAAQ0K,KACxBvI,MAAM,IAERpC,EAAK8K,MAAQC,YAAa,CACxBnJ,OAAQ5B,EAAK2C,KACbhB,MAAO,CAAC3B,EAAKuK,OAAQvK,EAAKsK,UAG5BtK,EAAKgL,eAAiB,IAEtBhL,EAAKoB,MAAQ,IACbpB,EAAKqB,OAAS,IACdrB,EAAKe,OAAS,CACVE,IAAK,GACLD,KAAM,IAQVhB,EAAKuB,KAAOvB,EAAKoB,MAAOpB,EAAKe,OAAOC,KAAO,GAC3ChB,EAAKwB,KAAOxB,EAAKqB,OAASrB,EAAKe,OAAOE,IAAM,IAE5CjB,EAAKyB,OAAOwJ,WAAW,CAAC,EAAGjL,EAAKuB,OAChCvB,EAAK8B,OAAOH,MAAM,CAAC3B,EAAKwB,KAAM,IAhEbxB,wEAkEV,IAAAgD,EAAA7C,KACP,OACA8C,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,sEACAF,EAAAC,EAAAC,cAAA,OAAKsF,MAAO,CAAEyC,SAAU,aACtBjI,EAAAC,EAAAC,cAAA,OAAK/B,MAAOjB,KAAKiB,MAAOC,OAAQlB,KAAKkB,QACnC4B,EAAAC,EAAAC,cAAA,QAAM1C,EAAG,EAAGI,EAAG,EAAGO,MAAOjB,KAAKiB,MAAOC,OAAQlB,KAAKkB,OAAQgC,KAAMlD,KAAKmB,GAAIgC,GAAI,KAC7EL,EAAAC,EAAAC,cAACW,EAAA,EAAD,CACE7C,IAAKd,KAAKY,OAAOE,IACjBD,KAAMb,KAAKY,OAAOC,KAClBG,MAAOhB,KAAKiB,MAAMjB,KAAKY,OAAOC,KAC9BS,OAAQtB,KAAKsB,OACbK,OAAQ3B,KAAK2B,OACbV,MAAOjB,KAAKoB,KACZF,OAAQlB,KAAKqB,KACbuC,OAAQ,QACRC,cAAe,GACfmH,QAAShL,KAAKsB,OAAO2J,YAAc,IAErCnI,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAOhD,IAAKd,KAAKY,OAAOE,IAAKD,KAAMb,KAAKY,OAAOC,MAC7CiC,EAAAC,EAAAC,cAACe,EAAA,EAAD,CACE3D,KAAMJ,KAAKI,KACXoC,KAAMxC,KAAKwC,KACXlC,EAAGN,KAAKM,EACRgB,OAAQtB,KAAKsB,OACbK,OAAQ3B,KAAK2B,OACbgJ,MAAO3K,KAAK2K,OAEX,SAACO,GACA,OAAOA,EAAUxJ,IAAI,SAAAyJ,GACnB,OAAOA,EAASC,KAAK1J,IAAI,SAAA2J,GACvB,OACEvI,EAAAC,EAAAC,cAAA,QACEqD,IAAG,aAAAC,OAAe6E,EAASjG,MAAxB,KAAAoB,OAAiC+E,EAAInG,OACxC5E,EAAG+K,EAAI/K,EACPI,EAAG2K,EAAI3K,EACPQ,OAAQmK,EAAInK,OACZD,MAAO,GACPiC,KAAMmI,EAAIV,MACVW,QAAS,SAAA7B,GACP8B,MAAK,YAAAjF,OAAakF,KAAKC,UAAUJ,eA0BjDvI,EAAAC,EAAAC,cAACc,EAAA,EAAD,KAEAhB,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CACIvD,IAAKd,KAAKY,OAAOE,IACjBD,KAAMb,KAAKY,OAAOC,KAClByD,MAAOtE,KAAK2B,OACZ4C,UAAQ,EACRG,MAAM,kCACNC,WAAY,CACVzB,KAAMlD,KAAK0L,QACX9G,WAAY,SACZC,SAAU,GACVC,WAAY,SAEdE,eAAgB,SAACC,EAAOC,GAAR,MAAmB,CACjChC,KAAML,EAAK6I,QACX9G,WAAY,MACZC,SAAU,GACVC,WAAY,QACZK,GAAI,UACJC,GAAI,WAENxB,OAAQ5D,KAAK0L,QACb3G,WAAY/E,KAAK0L,QACjBrG,cAAe,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,eAAmBC,EAAtB1F,OAAA2F,EAAA,EAAA3F,CAAAwF,EAAA,2BACbxC,EAAAC,EAAAC,cAAA,OAAUwC,EAAYD,MAG5BzC,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CACEvD,IAAKd,KAAKqB,KAAOrB,KAAKY,OAAOE,IAC7BD,KAAMb,KAAKY,OAAOC,KAAK,GACvByD,MAAOtE,KAAKsB,OACZsC,OAAQ5D,KAAK0L,QACb3G,WAAY/E,KAAK0L,QACjB1G,eAAgB,SAACC,EAAOC,GAAR,MAAmB,CAC/BhC,KAAML,EAAK6I,QACX7G,SAAU,GACVD,WAAY,eAKpB9B,EAAAC,EAAAC,cAAA,OACEsF,MAAO,CACHyC,SAAU,WACVjK,IAAKd,KAAKY,OAAOE,IAAM,EAAI,GAC7BG,MAAO,OACP0K,QAAS,OACTC,eAAgB,SAChB/G,SAAU,SAGZ/B,EAAAC,EAAAC,cAAC6I,EAAA,EAAD,CACEvH,MAAOtE,KAAK2K,MACZmB,UAAU,MACVC,YAAY,yBA5LMvF,aAuNfwF,cAAY9B,GCgFZ+B,cAvSb,SAAAA,EAAYrM,GAAO,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAiM,IACjBpM,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAmM,GAAA9L,KAAAH,KAAMJ,KACD2J,MAAQ,CACX2C,SAAU,GAEZrM,EAAKsB,GAAK,UAeV,IAdA,IAAIgL,EAAyBtM,EAAKD,MAAMQ,KAAK+B,OAAO,SAACC,EAAG8E,GAGtD,OAFA9E,EAAE8E,EAAE,wBAA0B9E,EAAE8E,EAAE,wBAA0B9E,EAAE8E,EAAE,wBAA0B,CAAEkF,IAAKlF,EAAE,uBAAwBmF,OAAQ,GACnIjK,EAAE8E,EAAE,wBAAJ,OAAwC9E,EAAE8E,EAAE,wBAAJ,OAAwC,EACzE9E,GACN,IAECkK,EAAuBzM,EAAKD,MAAMQ,KAAK+B,OAAO,SAACC,EAAG8E,GAGpD,OAFA9E,EAAE8E,EAAE,wBAA0B9E,EAAE8E,EAAE,wBAA0B9E,EAAE8E,EAAE,wBAA0B,CAAEkF,IAAKlF,EAAE,uBAAwBmF,OAAQ,GACnIjK,EAAE8E,EAAE,wBAAJ,OAAwC9E,EAAE8E,EAAE,wBAAJ,OAAwCE,SAASF,EAAE,4BACpF9E,GACN,IAEGmK,EAAY,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACzDC,EAA+B,GAnBpBjK,EAoBDzC,OAAOyH,OAAO4E,GAA9B1J,EAAA,EAAAA,EAAAF,EAAAG,OAAAD,IAAuD,CAAlD,IAAIgK,EAAGlK,EAAAE,GACJiK,EAAW7K,KAAK8K,MAAMvF,SAASqF,EAAG,KAAW,GAAK,EACpDG,EAAW,GACXF,GAAY,GAAKA,EAAWH,EAAU7J,OAAS,EACjDkK,EAAQ,GAAAtG,OAAMiG,EAAUG,GAAhB,KAAApG,OAA6BiG,EAAUG,EAAW,GAAK,GACtDA,GAAYH,EAAU7J,OAAS,IACxCkK,EAAQ,GAAAtG,OAAMiG,EAAUA,EAAU7J,OAAS,GAAnC,MAEV8J,EAA6BI,GAAYJ,EACvCI,GAEEJ,EAA6BI,GAC7B,CAAEA,WAAUP,OAAQ,GACxBG,EAA6BI,GAAUP,OACrCG,EAA6BI,GAAUP,OAASI,EAAG,OAIvD,IADA,IAAMI,EAA6B,GArClBC,EAsCDhN,OAAOyH,OAAO+E,GAA9BS,EAAA,EAAAA,EAAAD,EAAApK,OAAAqK,IAAqD,CAAhD,IAAIN,EAAGK,EAAAC,GACJL,EAAW7K,KAAK8K,MAAMvF,SAASqF,EAAG,KAAW,GAAK,EACpDG,EAAW,GACXF,GAAY,GAAKA,EAAWH,EAAU7J,OAAS,EACjDkK,EAAQ,GAAAtG,OAAMiG,EAAUG,GAAhB,KAAApG,OAA6BiG,EAAUG,EAAW,GAAK,GACtDA,GAAYH,EAAU7J,OAAS,IACxCkK,EAAQ,GAAAtG,OAAMiG,EAAUA,EAAU7J,OAAS,GAAnC,MAEVmK,EAA2BD,GAAYC,EACrCD,GAEEC,EAA2BD,GAC3B,CAAEA,WAAUP,OAAQ,GACxBQ,EAA2BD,GAAUP,OACnCQ,EAA2BD,GAAUP,OAASI,EAAG,OApDpC,OAuDjBN,EAAyBrM,OAAOyH,OAAOiF,GACvCF,EAAuBxM,OAAOyH,OAAOsF,GAErChN,EAAKO,KAAO,CAAC+L,EAAwBG,GAErCzM,EAAKS,EAAI,SAAAC,GAAC,OAAIA,EAAEqM,UAChB/M,EAAKa,EAAI,SAAAH,GAAC,OAAIA,EAAE8L,QAEhBxM,EAAKoB,MAAQ,IACbpB,EAAKqB,OAAS,IACdrB,EAAKe,OAAS,CACZC,KAAM,GACNG,MAAO,GACPF,IAAK,GACLC,OAAQ,GAGVlB,EAAKuB,KAAOvB,EAAKoB,MAAQpB,EAAKe,OAAOC,KACrChB,EAAKwB,KAAOxB,EAAKqB,OAAS,IAG1BrB,EAAKyB,OAAS,CACZmJ,YAAU,CACRK,WAAY,CAAC,EAAGjL,EAAKuB,MACrBK,OAAQ5B,EAAKO,KAAK,GAAGsB,IAAI7B,EAAKS,GAC9BoK,QAAS,KAEXD,YAAU,CACRK,WAAY,CAAC,EAAGjL,EAAKuB,MACrBK,OAAQ5B,EAAKO,KAAK,GAAGsB,IAAI7B,EAAKS,GAC9BoK,QAAS,MAGb7K,EAAK8B,OAAS,CACZC,YAAY,CACVkJ,WAAY,CAACjL,EAAKwB,KAAM,GACxBI,OAAQ,CAAC,EAAGI,KAAKC,IAALC,MAAAF,KAAI/B,OAAAkC,EAAA,EAAAlC,CAAQD,EAAKO,KAAK,GAAGsB,IAAI7B,EAAKa,QAEhDkB,YAAY,CACVkJ,WAAY,CAACjL,EAAKwB,KAAM,GACxBI,OAAQ,CAAC,EAAGI,KAAKC,IAALC,MAAAF,KAAI/B,OAAAkC,EAAA,EAAAlC,CAAQD,EAAKO,KAAK,GAAGsB,IAAI7B,EAAKa,SAGlDb,EAAKmN,WAAa,CAChBpL,YAAY,CACVH,OAAQ,CAAC,EAAGI,KAAKC,IAALC,MAAAF,KAAI/B,OAAAkC,EAAA,EAAAlC,CAAQD,EAAKO,KAAK,GAAGsB,IAAI7B,EAAKa,MAC9Cc,MAAO,CAACmG,IAAO,OAAOsF,WAAYtF,IAAO,OAAOuF,YAElDtL,YAAY,CACVH,OAAQ,CAAC,EAAGI,KAAKC,IAALC,MAAAF,KAAI/B,OAAAkC,EAAA,EAAAlC,CAAQD,EAAKO,KAAK,GAAGsB,IAAI7B,EAAKa,MAC9Cc,MAAO,CAACmG,IAAO,OAAOsF,WAAYtF,IAAO,OAAOuF,aAzGnCrN,wEA6GV,IAAAgD,EAAA7C,KACP,OACE8C,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,oCACFF,EAAAC,EAAAC,cAAA,OAAK/B,MAAOjB,KAAKiB,MAAOC,OAAQlB,KAAKkB,QACnC4B,EAAAC,EAAAC,cAAA,QACE1C,EAAG,EACHI,EAAG,EACHO,MAAOjB,KAAKiB,MACZC,OAAQlB,KAAKkB,OACbgC,KAAMlD,KAAKmB,GACXgC,GAAI,KAENL,EAAAC,EAAAC,cAACW,EAAA,EAAD,CACE7C,IAAKd,KAAKY,OAAOE,IACjBD,KAAMb,KAAKY,OAAOC,KAClBS,OAAQtB,KAAKsB,OAAO,GACpBK,OAAQ3B,KAAK2B,OAAO,GACpBV,MAAOjB,KAAKoB,KACZF,OAAQlB,KAAKqB,KACbuC,OAAQ,QACRC,cAAe,GACfmH,QAAShL,KAAKsB,OAAO,GAAG2J,YAAc,IAExCnI,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAOhD,IAAKd,KAAKY,OAAOE,IAAKD,KAAMb,KAAKY,OAAOC,MAC5Cb,KAAKI,KAAK,GAAGsB,IAAI,SAACnB,EAAG0F,GACpB,IAAMmG,EAAMvJ,EAAKvC,EAAEC,GACb4M,EAAWtK,EAAKvB,OAAO,GAAG2J,YAC1BmC,EAAYvK,EAAKxB,KAAOwB,EAAKlB,OAAO,GAAGkB,EAAKnC,EAAEH,IAC9C8M,EAAOxK,EAAKvB,OAAO,GAAG8K,GACtBkB,EAAOzK,EAAKxB,KAAO+L,EACzB,OACEtK,EAAAC,EAAAC,cAACe,EAAA,EAAD,CACEsC,IAAG,OAAAC,OAAS8F,GACZ9L,EAAG+M,EACH3M,EAAG4M,EACHrM,MAAOkM,EACPjM,OAAQkM,EACRlK,KAAML,EAAKmK,WAAW,GAAGnK,EAAKnC,EAAEH,IAChC+K,QAAS,SAAA7B,GACP8B,MAAK,YAAAjF,OAAakF,KAAKC,UAAU3L,OAAOyH,OAAOhH,YAMzDuC,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAOhD,IAAKd,KAAKY,OAAOE,IAAKD,KAAMb,KAAKY,OAAOC,MAC7CiC,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CACEvD,IAAK,EACLD,KAAM,EACNyD,MAAOtE,KAAK2B,OAAO,GACnB4C,UAAQ,EACRG,MAAM,sBACNC,WAAY,CACVzB,KAAM,YACN0B,WAAY,SACZC,SAAU,GACVC,WAAY,SAEdE,eAAgB,SAACC,EAAOC,GAAR,MAAmB,CACjChC,KAAM,YACN0B,WAAY,MACZC,SAAU,GACVC,WAAY,QACZK,GAAI,UACJC,GAAI,WAENxB,OAAO,YACPmB,WAAW,YACXM,cAAe,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,eAAmBC,EAAtB1F,OAAA2F,EAAA,EAAA3F,CAAAwF,EAAA,2BACbxC,EAAAC,EAAAC,cAAA,OAAUwC,EAAYD,MAG1BzC,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CACEvD,IAAKd,KAAKqB,KACViD,MAAOtE,KAAKsB,OAAO,GACnBsC,OAAO,YACPc,MAAM,aACNC,WAAY,CACVzB,KAAM,YACN0B,WAAY,SACZC,SAAU,GACVC,WAAY,SAEdC,WAAY,YACZC,eAAgB,SAACC,EAAOC,GAAR,MAAmB,CACjChC,KAAM,YACN2B,SAAU,GACVD,WAAY,eAKpB9B,EAAAC,EAAAC,cAAA,OAAK/B,MAAOjB,KAAKiB,MAAOC,OAAQlB,KAAKkB,QACnC4B,EAAAC,EAAAC,cAAA,QACE1C,EAAG,EACHI,EAAG,EACHO,MAAOjB,KAAKiB,MACZC,OAAQlB,KAAKkB,OACbgC,KAAMlD,KAAKmB,GACXgC,GAAI,KAENL,EAAAC,EAAAC,cAACW,EAAA,EAAD,CACE7C,IAAKd,KAAKY,OAAOE,IACjBD,KAAMb,KAAKY,OAAOC,KAClBS,OAAQtB,KAAKsB,OAAO,GACpBK,OAAQ3B,KAAK2B,OAAO,GACpBV,MAAOjB,KAAKoB,KACZF,OAAQlB,KAAKqB,KACbuC,OAAQ,QACRC,cAAe,GACfmH,QAAShL,KAAKsB,OAAO,GAAG2J,YAAc,IAExCnI,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAOhD,IAAKd,KAAKY,OAAOE,IAAKD,KAAMb,KAAKY,OAAOC,MAC5Cb,KAAKI,KAAK,GAAGsB,IAAI,SAACnB,EAAG0F,GACpB,IAAMmG,EAAMvJ,EAAKvC,EAAEC,GACb4M,EAAWtK,EAAKvB,OAAO,GAAG2J,YAC1BmC,EAAYvK,EAAKxB,KAAOwB,EAAKlB,OAAO,GAAGkB,EAAKnC,EAAEH,IAC9C8M,EAAOxK,EAAKvB,OAAO,GAAG8K,GACtBkB,EAAOzK,EAAKxB,KAAO+L,EACzB,OACEtK,EAAAC,EAAAC,cAACe,EAAA,EAAD,CACEsC,IAAG,OAAAC,OAAS8F,GACZ9L,EAAG+M,EACH3M,EAAG4M,EACHrM,MAAOkM,EACPjM,OAAQkM,EACRlK,KAAML,EAAKmK,WAAW,GAAGnK,EAAKnC,EAAEH,IAChC+K,QAAS,SAAA7B,GACP8B,MAAK,YAAAjF,OAAakF,KAAKC,UAAU3L,OAAOyH,OAAOhH,YAMzDuC,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAOhD,IAAKd,KAAKY,OAAOE,IAAKD,KAAMb,KAAKY,OAAOC,MAC7CiC,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CACEvD,IAAK,EACLD,KAAM,EACNyD,MAAOtE,KAAK2B,OAAO,GACnB4C,UAAQ,EACRG,MAAM,oBACNC,WAAY,CACVzB,KAAM,YACN0B,WAAY,SACZC,SAAU,GACVC,WAAY,SAEdE,eAAgB,SAACC,EAAOC,GAAR,MAAmB,CACjChC,KAAM,YACN0B,WAAY,MACZC,SAAU,GACVC,WAAY,QACZK,GAAI,UACJC,GAAI,WAENxB,OAAQ,YACRmB,WAAY,YACZM,cAAe,SAAAkI,GAAA,IAAGhI,EAAHgI,EAAGhI,eAAmBC,EAAtB1F,OAAA2F,EAAA,EAAA3F,CAAAyN,EAAA,2BACbzK,EAAAC,EAAAC,cAAA,OAAUwC,EAAYD,MAG1BzC,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CACEvD,IAAKd,KAAKqB,KACViD,MAAOtE,KAAKsB,OAAO,GACnBsC,OAAQ,YACRc,MAAO,aACPC,WAAY,CACVzB,KAAM,YACN0B,WAAY,SACZC,SAAU,GACVC,WAAY,SAEdC,WAAY,YACZC,eAAgB,SAACC,EAAOC,GAAR,MAAmB,CACjChC,KAAM,YACN2B,SAAU,GACVD,WAAY,uBA/RL4B,8BCoERgH,cArEb,SAAAA,EAAY5N,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAwN,IACjB3N,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA0N,GAAArN,KAAAH,KAAMJ,KAiBR6N,YAAc,SAAA/I,GACZgJ,QAAQC,IAAI,6BAnBK9N,EAqBnB+N,YAAc,SAAAlJ,GACZgJ,QAAQC,IAAI,+BAnBZ9N,EAAKO,KAAOP,EAAKD,MAAMQ,KAAK+B,OAAO,SAACC,EAAG8E,GAOrC,OANA9E,EAAE8E,EAAE,iBAAmB9E,EAAE8E,EAAE,iBAC3B9E,EAAE8E,EAAE,iBACF,CAAExC,MAAOwC,EAAE,gBAAgB8B,MAAM,MAAM,GAAG6E,OAAO7E,MAAM,KACxDtH,IAAI,SAACuH,GAAD,OAAOA,EAAEC,OAAO,GAAGC,cAAgBF,EAAEG,UAAU,KACnDC,KAAK,KAAMpE,MAAO,GACnB7C,EAAE8E,EAAE,iBAAiBjC,OAAS,EACvB7C,GACN,IACHvC,EAAKO,KAAON,OAAOyH,OAAO1H,EAAKO,MAC/BP,EAAKS,EAAI,SAAAC,GAAC,OAAIA,EAAE0E,OAChBpF,EAAKiO,KAAOjM,KAAKgI,IAAL9H,MAAAF,KAAI/B,OAAAkC,EAAA,EAAAlC,CAAQD,EAAKO,KAAKsB,IAAI7B,EAAKS,KAC3CT,EAAKuB,KAAOS,KAAKC,IAALC,MAAAF,KAAI/B,OAAAkC,EAAA,EAAAlC,CAAQD,EAAKO,KAAKsB,IAAI7B,EAAKS,KAf1BT,wEA0BjB,OADA6N,QAAQC,IAAI3N,KAAKI,MAEb0C,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,mDACAF,EAAAC,EAAAC,cAAC+K,EAAAhL,EAAD,CAMEuF,MAAO,CACLrH,MAAO,QACPC,OAAQ,QACR8M,WAAY,IAEd/M,MAAO,IACPC,OAAQ,IACR+M,YAAY,EACZC,iBAAkB,GAClBC,WAAY,CACVC,OAAQ,QACRC,KAAM,GACN1D,MAAO,QAET2D,UAAW,CACTF,OAAQ,QACRC,KAAM,GACN1D,MAAO,QAET4D,UAAW,CACTH,OAAQ,QACRC,KAAM,GACN1D,MAAO,QAGT6D,gBAAiBxO,KAAKyN,YACtBgB,eAAgBzO,KAAK4N,YACrBxN,KAAMJ,KAAKI,eA/DS6J,IAAMzD,WCqNrBkI,cAnNb,SAAAA,EAAY9O,GAAO,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA0O,IACjB7O,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA4O,GAAAvO,KAAAH,KAAMJ,KACD2J,MAAQ,CACX2C,SAAU,GAEZrM,EAAKsB,GAAK,UACV,IAAIwN,EAA4B9O,EAAKD,MAAMQ,KAAK+B,OAAO,SAACC,EAAG8E,GAMzD,OALA9E,EAAE8E,EAAE,8BAAgC9E,EAAE8E,EAAE,8BACpC9E,EAAE8E,EAAE,8BACJ,CAAE0H,OAAQ1H,EAAE,6BAA8BmF,OAAQ,GACtDjK,EAAE8E,EAAE,8BAAJ,OACE9E,EAAE8E,EAAE,8BAAJ,OAA8C,EACzC9E,GACN,IAbc,OAejBvC,EAAKO,KAAON,OAAOyH,OAAOoH,GAA2BE,KAAK,SAAC9L,EAAE+L,GAAH,OAASA,EAAEzC,OAAStJ,EAAEsJ,SAChFxM,EAAKS,EAAI,SAAAC,GAAC,OAAIA,EAAEqO,QAChB/O,EAAKa,EAAI,SAAAH,GAAC,OAAIA,EAAE8L,QAEhBxM,EAAKoB,MAAQ,IACbpB,EAAKqB,OAAS,IACdrB,EAAKe,OAAS,CACZC,KAAM,GACNG,MAAO,GACPF,IAAK,GACLC,OAAQ,GAGVlB,EAAKuB,KAAOvB,EAAKoB,MAAQpB,EAAKe,OAAOC,KACrChB,EAAKwB,KAAOxB,EAAKqB,OAAS,IAG1BrB,EAAKyB,OAASmJ,YAAU,CACtBK,WAAY,CAAC,EAAGjL,EAAKuB,MACrBK,OAAQ5B,EAAKO,KAAKsB,IAAI7B,EAAKS,GAC3BoK,QAAS,KAEX7K,EAAK8B,OAASC,YAAY,CACxBkJ,WAAY,CAACjL,EAAKwB,KAAM,GACxBI,OAAQ,CAAC,EAAGI,KAAKC,IAALC,MAAAF,KAAI/B,OAAAkC,EAAA,EAAAlC,CAAQD,EAAKO,KAAKsB,IAAI7B,EAAKa,QAvC5Bb,qEA4CbO,GACJ,MAAmB,mBAAhBA,EAAKwO,OACC,UAEA,0CAIHxO,GACN,MAAmB,mBAAhBA,EAAKwO,OACC,IAEA,oCAIF,IAAA/L,EAAA7C,KACP,OACE8C,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,mDACAF,EAAAC,EAAAC,cAAA,OAAK/B,MAAOjB,KAAKiB,MAAOC,OAAQlB,KAAKkB,QACnC4B,EAAAC,EAAAC,cAAA,QACE1C,EAAG,EACHI,EAAG,EACHO,MAAOjB,KAAKiB,MACZC,OAAQlB,KAAKkB,OACbgC,KAAMlD,KAAKmB,GACXgC,GAAI,KAENL,EAAAC,EAAAC,cAACW,EAAA,EAAD,CACE7C,IAAKd,KAAKY,OAAOE,IACjBD,KAAMb,KAAKY,OAAOC,KAClBS,OAAQtB,KAAKsB,OACbK,OAAQ3B,KAAK2B,OACbV,MAAOjB,KAAKoB,KACZF,OAAQlB,KAAKqB,KACbuC,OAAQ,QACRC,cAAe,GACfmH,QAAShL,KAAKsB,OAAO2J,YAAc,IAErCnI,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAOhD,IAAKd,KAAKY,OAAOE,IAAKD,KAAMb,KAAKY,OAAOC,MAC5Cb,KAAKI,KAAKsB,IAAI,SAACnB,EAAG0F,GACjB,IAAMmG,EAAMvJ,EAAKvC,EAAEC,GACb4M,EAAWtK,EAAKvB,OAAO2J,YACvBmC,EAAYvK,EAAKxB,KAAOwB,EAAKlB,OAAOkB,EAAKnC,EAAEH,IAC3C8M,EAAOxK,EAAKvB,OAAO8K,GACnBkB,EAAOzK,EAAKxB,KAAO+L,EACzB,OACEtK,EAAAC,EAAAC,cAACe,EAAA,EAAD,CACEsC,IAAG,OAAAC,OAAS8F,GACZ9L,EAAG+M,EACH3M,EAAG4M,EACHrM,MAAOkM,EACPjM,OAAQkM,EACRlK,KAAML,EAAK8H,MAAMpK,GACjBwO,QAASlM,EAAKkM,QAAQxO,GACtB+K,QAAS,SAAA7B,GACP8B,MAAK,YAAAjF,OAAakF,KAAKC,UAAU3L,OAAOyH,OAAOhH,YAMzDuC,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAOhD,IAAKd,KAAKY,OAAOE,IAAKD,KAAMb,KAAKY,OAAOC,MAC7CiC,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CACEvD,IAAK,EACLD,KAAM,EACNyD,MAAOtE,KAAK2B,OACZ4C,UAAQ,EACRG,MAAM,sBACNC,WAAY,CACVzB,KAAM,YACN0B,WAAY,SACZC,SAAU,GACVC,WAAY,SAEdE,eAAgB,SAACC,EAAOC,GAAR,MAAmB,CACjChC,KAAM,YACN0B,WAAY,MACZC,SAAU,GACVC,WAAY,QACZK,GAAI,UACJC,GAAI,WAENxB,OAAO,YACPmB,WAAW,YACXM,cAAe,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,eAAmBC,EAAtB1F,OAAA2F,EAAA,EAAA3F,CAAAwF,EAAA,2BACbxC,EAAAC,EAAAC,cAAA,OAAUwC,EAAYD,MAqB1BzC,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CACEvD,IAAKd,KAAKqB,KACVR,KAAM,EACNyD,MAAOtE,KAAKsB,OACZkD,SAAU,GACVZ,OAAO,UACPc,MAAM,WAEL,SAAAiB,GACC,IAGMC,EAAa/C,EAAK5B,MAAM,EAAI4B,EAAKjC,OAAOC,KAC9C,OACEiC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,yBACV0C,EAAKI,MAAMrE,IAAI,SAACsE,EAAMC,GACrB,IAAMC,EAAQF,EAAKzC,GAAGjD,EAChB6F,EAAQH,EAAKzC,GAAG7C,EARN,GAQ0BiF,EAAKS,WAC/C,OACEtD,EAAAC,EAAAC,cAACc,EAAA,EAAD,CACEuC,IAAG,WAAAC,OAAaN,EAAKf,MAAlB,KAAAqB,OAA2BL,GAC9BhD,UAAW,gBAEXH,EAAAC,EAAAC,cAACe,EAAA,EAAD,CACET,KAAM0C,EAAK1C,KACXC,GAAIyC,EAAKzC,GACTK,OAfM,YAiBRd,EAAAC,EAAAC,cAAA,QACEuD,UAAS,aAAAD,OAAeJ,EAAf,MAAAI,OAAyBH,EAAM,GAA/B,aAAAG,QAnBF,GAmBE,KACTzB,SArBU,GAsBVD,WAAW,MACX1B,KArBM,WAuBL8C,EAAKT,mBAKdzC,EAAAC,EAAAC,cAAA,QACE4B,WAAW,SACX2B,UAAS,aAAAD,OAAeV,EAAf,UACTf,SAAS,KACT3B,KAAK,UACL8L,WAAW,QAEV,wBAvMaxI,aCoErByI,cApEb,SAAAA,EAAYrP,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAiP,IACjBpP,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAmP,GAAA9O,KAAAH,KAAMJ,KAgBR6N,YAAc,SAAA/I,GACZgJ,QAAQC,IAAI,6BAlBK9N,EAoBnB+N,YAAc,SAAAlJ,GACZgJ,QAAQC,IAAI,+BAlBZ9N,EAAKO,KAAOP,EAAKD,MAAMQ,KAAK+B,OAAO,SAACC,EAAG8E,GAMrC,OALA9E,EAAE8E,EAAE,0BAA4B9E,EAAE8E,EAAE,0BACpC9E,EAAE8E,EAAE,0BAA4B,CAAExC,MAAOwC,EAAE,yBAAyB8B,MAAM,KACzEtH,IAAI,SAACuH,GAAD,OAAOA,EAAEC,OAAO,GAAGC,cAAgBF,EAAEG,UAAU,KACnDC,KAAK,KAAMpE,MAAO,GACnB7C,EAAE8E,EAAE,0BAA0BjC,OAAS,EAChC7C,GACN,IACHvC,EAAKO,KAAON,OAAOyH,OAAO1H,EAAKO,MAAMyO,KAAK,SAAC9L,EAAE+L,GAAH,OAASA,EAAE7J,MAAQlC,EAAEkC,QAC/DpF,EAAKS,EAAI,SAAAC,GAAC,OAAIA,EAAE0E,OAChBpF,EAAKiO,KAAOjM,KAAKgI,IAAL9H,MAAAF,KAAI/B,OAAAkC,EAAA,EAAAlC,CAAQD,EAAKO,KAAKsB,IAAI7B,EAAKS,KAC3CT,EAAKuB,KAAOS,KAAKC,IAALC,MAAAF,KAAI/B,OAAAkC,EAAA,EAAAlC,CAAQD,EAAKO,KAAKsB,IAAI7B,EAAKS,KAd1BT,wEAyBjB,OADA6N,QAAQC,IAAI3N,KAAKI,MAEb0C,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,2CACAF,EAAAC,EAAAC,cAAC+K,EAAAhL,EAAD,CAMEuF,MAAO,CACLrH,MAAO,QACPC,OAAQ,QACR8M,WAAY,IAEd/M,MAAO,IACPC,OAAQ,IACR+M,YAAY,EACZC,iBAAkB,GAClBC,WAAY,CACVC,OAAQ,QACRC,KAAM,GACN1D,MAAO,QAET2D,UAAW,CACTF,OAAQ,QACRC,KAAM,GACN1D,MAAO,QAET4D,UAAW,CACTH,OAAQ,QACRC,KAAM,GACN1D,MAAO,QAGT6D,gBAAiBxO,KAAKyN,YACtBgB,eAAgBzO,KAAK4N,YACrBxN,KAAMJ,KAAKI,eA9DY6J,IAAMzD,WCmHxB0I,cAzGb,SAAAA,EAAYtP,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkP,IACjBrP,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAoP,GAAA/O,KAAAH,KAAMJ,KAED2J,MAAQ,CACXnJ,KAAM,GACNsB,IAAK,IALU7B,mFAWjBG,KAAKmP,4CAGAlK,EAAO7E,GASZ,MARa,CACXgP,EAAItM,EAAAC,EAAAC,cAAA,OAAKqD,IAAK,aAAapD,UAAU,0BACrCH,EAAAC,EAAAC,cAACqM,EAAD,CAAWjP,KAAMA,KAEjBkP,EAAIxM,EAAAC,EAAAC,cAAA,OAAKqD,IAAI,gBAAgBpD,UAAU,yBACrCH,EAAAC,EAAAC,cAACuM,EAAD,CAAcnP,KAAMA,MAGZ6E,qCAGJA,GACRjF,KAAK0J,SAAS,CACZhI,IAAK1B,KAAKwP,OAAOvK,EAAOjF,KAAKuJ,MAAMnJ,6CAI1B,IAAAyC,EAAA7C,KAqBX2H,IAAO,sGAAsG8H,KAAK,SAAAC,GAChH7M,EAAK8M,WAAa,GAClB,IAAMvP,EAAOsP,EAAQhO,IAAI,SAAAkO,GACvB,OAvBe,SAACA,GAClBA,EAAMvN,KAAOwN,EAAOD,EAAMpP,MAAMsP,MAAMrP,OACtC,IAF4B,IAAA8B,EAEfzC,OAAO0C,KAAKoN,GAAzBnN,EAAA,EAAAA,EAAAF,EAAAG,OAAAD,IAAgC,CAA5B,IAAIwD,EAAC1D,EAAAE,GACiB,kBAAdmN,EAAM3J,KACd2J,EAAM3J,GAAK2J,EAAM3J,GAAG4H,OAAO5G,eAEpB,wBAANhB,EACD2J,EAAM3J,GAAKmB,SAASvF,KAAKkO,MAAMjH,WAAW8G,EAAM3J,OAAS,GAC3C,wCAANA,EAC0B,CAAC,MAAO,KAAM,WAClBqE,SAASsF,EAAM3J,MAC3C2J,EAAM3J,GAAK,WAEC,uBAANA,IACR2J,EAAM3J,GAAkB,KAAb2J,EAAM3J,GAAY,UAAY2J,EAAM3J,IAEjDpD,EAAK8M,WAAW1J,GAAKpD,EAAK8M,WAAW1J,GAAKpD,EAAK8M,WAAW1J,GAAG+J,IAAIJ,EAAM3J,IAAM,IAAIqB,IAAI,CAACsI,EAAM3J,KAE9F,OAAO2J,EAKEK,CAAWL,KAEpB/M,EAAK6G,SAAS,CACZtJ,OACAsB,IAAKmB,EAAK2M,OAAO,EAAGpP,wCAMxB,OACE0C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKsF,MAAO,CAACpH,OAAO,MAClBD,MAAO,OACP0K,QAAS,OACTuE,WAAY,SACZtE,eAAgB,aAChBhL,OAAQ,kBACRuP,MAAO,SACTrN,EAAAC,EAAAC,cAACoN,EAAArN,EAAD,CAAYsN,QAAQ,KAAK1F,MAAM,eAA/B,uCAEA7H,EAAAC,EAAAC,cAACoN,EAAArN,EAAD,CAAYsN,QAAQ,WAAW1F,MAAM,gBAAgBrC,MAAO,CAACzD,SAAU,OAAQyL,aAAc,UAA7F,sFAA0LxN,EAAAC,EAAAC,cAAA,WAA1L,2CAEAF,EAAAC,EAAAC,cAAA,MAAI/B,MAAM,MAAMqH,MAAO,CAACyG,QAAQ,MAAOuB,aAAc,UACnDtQ,KAAKuJ,MAAMnJ,KAAKsC,OAAS,GACzBI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCAEbH,EAAAC,EAAAC,cAACuN,EAAD,CAAWnQ,KAAMJ,KAAKuJ,MAAMnJ,QAE9B0C,EAAAC,EAAAC,cAACwN,EAAD,CAAYC,QAAS,CAAGC,KAAM,QAAU/G,UAAW3J,KAAK2J,UAAUgH,KAAK3Q,QAKpEA,KAAKuJ,MAAM7H,IAEdoB,EAAAC,EAAAC,cAAC4N,EAAD,CAAiBxQ,KAAMJ,KAAKuJ,MAAMnJ,OAClC0C,EAAAC,EAAAC,cAAC6N,EAAD,CAAUzQ,KAAMJ,KAAKuJ,MAAMnJ,OAC3B0C,EAAAC,EAAAC,cAAC8N,EAAD,CAAiB1Q,KAAMJ,KAAKuJ,MAAMnJ,OAClC0C,EAAAC,EAAAC,cAAC+N,EAAD,CAAuB3Q,KAAMJ,KAAKuJ,MAAMnJ,OACxC0C,EAAAC,EAAAC,cAACgO,EAAD,CAAoB5Q,KAAQJ,KAAKuJ,MAAMnJ,gBAlGjCoG,aCHEyK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOzO,EAAAC,EAAAC,cAACwO,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMpC,KAAK,SAAAqC,GACjCA,EAAaC","file":"static/js/main.ba9359bd.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Group } from \"@vx/group\";\nimport { curveBasis } from \"@vx/curve\";\nimport { Grid } from \"@vx/grid\"\nimport { LinearGradient } from \"@vx/gradient\";\nimport { AxisLeft, AxisBottom } from \"@vx/axis\";\nimport { Area, LinePath, Line } from \"@vx/shape\";\nimport { scaleTime, scaleLinear } from \"@vx/scale\";\nclass AreaChart extends Component {\n  constructor(props) {\n    super(props);\n    this.data = this.getDatesToShootingsCountMap(this.props.data);\n    // accessors\n    this.x = d => new Date(d.year);\n    this.y = d => d.count;\n    this.margin = {\n      left: 60,\n      top: 55,\n      bottom: 60,\n      right: 50\n    };\n    this.width = 500;\n    this.height = 500;\n    this.bg = \"#eaedff\";\n\n    this.xMax = this.width - this.margin.left - this.margin.right;\n    this.yMax = this.height - this.margin.top - this.margin.bottom;\n\n    // scales\n    this.xScale = scaleTime({\n      range: [0, this.xMax / 9],\n      domain: this.data.map(this.x)\n    });\n    this.yScale = scaleLinear({\n      range: [this.yMax, 0],\n      domain: [0, Math.max(...this.data.map(this.y))],\n      nice: true\n    });\n  }\n\n  // responsive utils for axis ticks\n  numTicksForHeight(height) {\n    if (height <= 300) return 3;\n    if (300 < height && height <= 600) return 5;\n    return 10;\n  }\n\n  numTicksForWidth(width) {\n    if (width <= 300) return 2;\n    if (300 < width && width <= 400) return 5;\n    return 10;\n  }\n\n  getDatesToShootingsCountMap(data) {\n    const yearToNumMap = data.reduce((r, d) => {\n      r[d.Year] = r[d.Year] ? r[d.Year] + 1 : 1;\n      return r;\n    }, {});\n    const dataForAreaChart = [];\n    for (let year of Object.keys(yearToNumMap)) {\n      const yearToNum = {\n        year: year,\n        count: yearToNumMap[year]\n      };\n      dataForAreaChart.push(yearToNum);\n    }\n    return dataForAreaChart;\n  }\n\n  // bounds\n\n  render() {\n    return (\n      <div className=\"annual_shootings\">\n        <h3>Number of Mass Shootings In the US Over The Years</h3>\n        <svg width={this.width} height={this.height}>\n          <rect x={0} y={0} width={this.width} height={this.height} fill={this.bg} rx={14} />\n          <LinearGradient\n            id=\"linear\"\n            from=\"#fed976\"\n            to=\"#f03b20\"\n            vertical={false}\n            fromOpacity={0.3}\n            toOpacity={1.0}\n          />\n          <Grid\n            top={this.margin.top}\n            left={this.margin.left}\n            xScale={this.xScale}\n            yScale={this.yScale}\n            width={this.width}\n            height={this.yMax}\n            stroke={\"black\"}\n            strokeOpacity={0.1}\n            // xOffset={this.xScale.bandwidth() / 2}\n          />\n          <Group top={this.margin.top} left={this.margin.left}>\n            <Area\n              data={this.data}\n              x={d => this.xScale(this.x(d))}\n              y0={d => this.yScale.range()[0]}\n              y1={d => this.yScale(this.y(d))}\n              strokeWidth={2}\n              stroke={\"transparent\"}\n              fill={\"url(#linear)\"}\n              curve={curveBasis}\n            />\n            <LinePath\n              data={this.data}\n              x={d => this.xScale(this.x(d))}\n              y={d => this.yScale(this.y(d))}\n              stroke={\"url('#linear')\"}\n              strokeWidth={2}\n              curve={curveBasis}\n            />\n          </Group>\n          <Group left={this.margin.left}>\n            <AxisLeft\n              top={this.margin.top}\n              left={0}\n              scale={this.yScale}\n              hideZero\n              numTicks={this.numTicksForHeight(this.height)}\n              label=\"Number of Shootings\"\n              labelProps={{\n                fill: \"#8e205f\",\n                textAnchor: \"middle\",\n                fontSize: 12,\n                fontFamily: \"Arial\"\n              }}\n              stroke=\"#1b1a1e\"\n              tickStroke=\"#8e205f\"\n              tickLabelProps={(value, index) => ({\n                fill: \"#8e205f\",\n                textAnchor: \"end\",\n                fontSize: 10,\n                fontFamily: \"Arial\",\n                dx: \"-0.25em\",\n                dy: \"0.25em\"\n              })}\n              tickComponent={({ formattedValue, ...tickProps }) => (\n                <text {...tickProps}>{formattedValue}</text>\n              )}\n            />\n\n            <AxisBottom\n              top={this.height - this.margin.bottom}\n              left={0}\n              scale={this.xScale}\n              numTicks={this.numTicksForWidth(this.width)}\n              stroke=\"#1b1a1e\"\n              label=\"Time\"\n            >\n              {axis => {\n                const tickLabelSize = 10;\n                const tickRotate = 45;\n                const tickColor = \"#8e205f\";\n                const axisCenter =\n                  axis.axisToPoint.x - axis.axisFromPoint.x + 160;\n                return (\n                  <g className=\"my-custom-bottom-axis\">\n                    {axis.ticks.map((tick, i) => {\n                      const tickX = tick.to.x;\n                      const tickY = tick.to.y + tickLabelSize + axis.tickLength;\n                      return (\n                        <Group\n                          key={`vx-tick-${tick.value}-${i}`}\n                          className={\"vx-axis-tick\"}\n                        >\n                          <Line\n                            from={tick.from}\n                            to={tick.to}\n                            stroke={tickColor}\n                          />\n                          <text\n                            transform={`translate(${tickX}, ${tickY}) rotate(${tickRotate})`}\n                            fontSize={tickLabelSize}\n                            textAnchor=\"middle\"\n                            fill={tickColor}\n                          >\n                            {tick.formattedValue}\n                          </text>\n                        </Group>\n                      );\n                    })}\n                    <text\n                      textAnchor=\"middle\"\n                      transform={`translate(${axisCenter}, 50)`}\n                      fontSize=\"12\"\n                      fill=\"#8e205f\"\n                    >\n                      {axis.label}\n                    </text>\n                  </g>\n                );\n              }}\n            </AxisBottom>\n          </Group>\n        </svg>\n      </div>\n    );\n  }\n}\n\nexport default AreaChart;\n","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport * as topojson from \"topojson-client\";\nimport { scaleQuantize } from \"@vx/scale\";\nimport topology from \"../data/us.json\";\nimport stateNames from \"../data/us_state_names.json\";\n\nclass MapStates extends Component {\n  constructor(props) {\n    super(props);\n    this.width = 1000;\n    this.height = 600;\n    this.us = topology;\n    this.data = this.props.data;\n\n    this.names = {};\n    this.stateToVictimsCount = {}\n    stateNames.forEach(d => {\n      this.names[d.name.toLowerCase()] = d.id;\n      this.names[d.id] = d.name.toLowerCase();\n      this.stateToVictimsCount[d.id] = 0\n    });\n    this.stateToVictimsCount = this.data.reduce((r, o) => {\n      r[this.names[o.State]] = r[this.names[o.State]]? r[this.names[o.State]] + parseInt(o[\"Total Number of Victims\"]): parseInt(o[\"Total Number of Victims\"]);\n      return r;\n    }, this.stateToVictimsCount);\n    const colorDomain = [0, Math.max(...new Set(Object.values(this.stateToVictimsCount)))]\n    this.stateColor = scaleQuantize({\n      domain: colorDomain,\n      // range: [\"#fff5f0\",\"#fff4ef\",\"#fff4ee\",\"#fff3ed\",\"#fff2ec\",\"#fff2eb\",\"#fff1ea\",\"#fff0e9\",\"#fff0e8\",\"#ffefe7\",\"#ffeee6\",\"#ffeee6\",\"#ffede5\",\"#ffece4\",\"#ffece3\",\"#ffebe2\",\"#feeae1\",\"#fee9e0\",\"#fee9de\",\"#fee8dd\",\"#fee7dc\",\"#fee6db\",\"#fee6da\",\"#fee5d9\",\"#fee4d8\",\"#fee3d7\",\"#fee2d6\",\"#fee2d5\",\"#fee1d4\",\"#fee0d2\",\"#fedfd1\",\"#feded0\",\"#feddcf\",\"#fedccd\",\"#fedbcc\",\"#fedacb\",\"#fed9ca\",\"#fed8c8\",\"#fed7c7\",\"#fdd6c6\",\"#fdd5c4\",\"#fdd4c3\",\"#fdd3c1\",\"#fdd2c0\",\"#fdd1bf\",\"#fdd0bd\",\"#fdcfbc\",\"#fdceba\",\"#fdcdb9\",\"#fdccb7\",\"#fdcbb6\",\"#fdc9b4\",\"#fdc8b3\",\"#fdc7b2\",\"#fdc6b0\",\"#fdc5af\",\"#fdc4ad\",\"#fdc2ac\",\"#fdc1aa\",\"#fdc0a8\",\"#fcbfa7\",\"#fcbea5\",\"#fcbca4\",\"#fcbba2\",\"#fcbaa1\",\"#fcb99f\",\"#fcb89e\",\"#fcb69c\",\"#fcb59b\",\"#fcb499\",\"#fcb398\",\"#fcb196\",\"#fcb095\",\"#fcaf94\",\"#fcae92\",\"#fcac91\",\"#fcab8f\",\"#fcaa8e\",\"#fca98c\",\"#fca78b\",\"#fca689\",\"#fca588\",\"#fca486\",\"#fca285\",\"#fca183\",\"#fca082\",\"#fc9e81\",\"#fc9d7f\",\"#fc9c7e\",\"#fc9b7c\",\"#fc997b\",\"#fc987a\",\"#fc9778\",\"#fc9677\",\"#fc9475\",\"#fc9374\",\"#fc9273\",\"#fc9071\",\"#fc8f70\",\"#fc8e6f\",\"#fc8d6d\",\"#fc8b6c\",\"#fc8a6b\",\"#fc8969\",\"#fc8868\",\"#fc8667\",\"#fc8565\",\"#fc8464\",\"#fb8263\",\"#fb8162\",\"#fb8060\",\"#fb7f5f\",\"#fb7d5e\",\"#fb7c5d\",\"#fb7b5b\",\"#fb795a\",\"#fb7859\",\"#fb7758\",\"#fb7657\",\"#fb7455\",\"#fa7354\",\"#fa7253\",\"#fa7052\",\"#fa6f51\",\"#fa6e50\",\"#fa6c4e\",\"#f96b4d\",\"#f96a4c\",\"#f9684b\",\"#f9674a\",\"#f96549\",\"#f86448\",\"#f86347\",\"#f86146\",\"#f86045\",\"#f75e44\",\"#f75d43\",\"#f75c42\",\"#f65a41\",\"#f65940\",\"#f6573f\",\"#f5563e\",\"#f5553d\",\"#f4533c\",\"#f4523b\",\"#f4503a\",\"#f34f39\",\"#f34e38\",\"#f24c37\",\"#f24b37\",\"#f14936\",\"#f14835\",\"#f04734\",\"#ef4533\",\"#ef4433\",\"#ee4332\",\"#ed4131\",\"#ed4030\",\"#ec3f2f\",\"#eb3d2f\",\"#eb3c2e\",\"#ea3b2d\",\"#e93a2d\",\"#e8382c\",\"#e7372b\",\"#e6362b\",\"#e6352a\",\"#e5342a\",\"#e43229\",\"#e33128\",\"#e23028\",\"#e12f27\",\"#e02e27\",\"#df2d26\",\"#de2c26\",\"#dd2b25\",\"#dc2a25\",\"#db2924\",\"#da2824\",\"#d92723\",\"#d72623\",\"#d62522\",\"#d52422\",\"#d42321\",\"#d32221\",\"#d22121\",\"#d12020\",\"#d01f20\",\"#ce1f1f\",\"#cd1e1f\",\"#cc1d1f\",\"#cb1d1e\",\"#ca1c1e\",\"#c91b1e\",\"#c71b1d\",\"#c61a1d\",\"#c5191d\",\"#c4191c\",\"#c3181c\",\"#c2181c\",\"#c0171b\",\"#bf171b\",\"#be161b\",\"#bd161a\",\"#bb151a\",\"#ba151a\",\"#b91419\",\"#b81419\",\"#b61419\",\"#b51319\",\"#b41318\",\"#b21218\",\"#b11218\",\"#b01218\",\"#ae1117\",\"#ad1117\",\"#ac1117\",\"#aa1017\",\"#a91016\",\"#a71016\",\"#a60f16\",\"#a40f16\",\"#a30e15\",\"#a10e15\",\"#a00e15\",\"#9e0d15\",\"#9c0d14\",\"#9b0c14\",\"#990c14\",\"#970c14\",\"#960b13\",\"#940b13\",\"#920a13\",\"#900a13\",\"#8f0a12\",\"#8d0912\",\"#8b0912\",\"#890812\",\"#870811\",\"#860711\",\"#840711\",\"#820711\",\"#800610\",\"#7e0610\",\"#7c0510\",\"#7a0510\",\"#78040f\",\"#76040f\",\"#75030f\",\"#73030f\",\"#71020e\",\"#6f020e\",\"#6d010e\",\"#6b010e\",\"#69000d\",\"#67000d\"]\n      // range: d3.schemeReds[9]\n      range: [\n        \"#fee0d2\",\n        \"#fcbba1\",\n        \"#fc9272\",\n        \"#fb6a4a\",\n        \"#ef3b2c\",\n        \"#cb181d\",\n        \"#a50f15\",\n      ]\n    })\n\n  }\n\n  componentDidMount() {\n    // extract just the names and Ids\n    var map_svg = d3.select(\"#map_with_states\");\n    var projection = d3.geoAlbersUsa();\n    var path = d3.geoPath().projection(projection);\n    const states = topojson.feature(this.us, this.us.objects.states).features;\n    projection.scale(1000);\n\n    map_svg\n      .selectAll(\"path\")\n      .data(states)\n      .enter()\n      .append(\"path\")\n      .attr(\"class\", \"feature\")\n      .style(\"fill\", d => this.stateColor(this.stateToVictimsCount[d.id]))\n      .style(\"stroke\", \"black\")\n      .style(\"stroke-width\", \"0.5\")\n      .attr(\"d\", path)\n      \n    map_svg\n      .append(\"g\")\n      .attr(\"class\", \"labels\")\n    \n    map_svg\n      .selectAll(\".labels\")\n      .data(states)\n      .enter()\n      .append(\"text\")\n      .attr(\"transform\", d => `translate(${path.centroid(d)})`)\n      .style(\"text-anchor\", \"middle\")\n      .style(\"font-size\", \"9\")\n      // .text(d => this.names[d.id] ? this.names[d.id] : \"\")\n      // .append('svg:tspan')\n      // .attr('x', 0)\n      // .attr('dy', 20)\n      .text(d => this.stateToVictimsCount[d.id] ? this.stateToVictimsCount[d.id]: \"0\")\n  }\n  render() {\n    return (\n      <div id=\"section1\" className=\"card text-center\">\n        <h3>Mass Shootings Across States by Number of Victims</h3>\n        <svg id=\"map_with_states\" width={this.width} height={this.height} />\n      </div>\n    );\n  }\n}\n\nexport default MapStates;\n","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport * as topojson from \"topojson-client\";\nimport { scaleQuantize } from \"@vx/scale\";\nimport topology from \"../data/us.json\";\n\nclass MapLocations extends Component {\n  constructor(props) {\n    super(props);\n    this.width = 1000;\n    this.height = 600;\n    this.us = topology;\n    this.data = this.props.data;\n    this.locationToShootingsCount = this.data.reduce((r, o) => {\n      r[o.Location] = r[o.Location] ? r[o.Location] + 1 : 1;\n      return r;\n    }, {});\n    this.locationToVictimsCount = this.data.reduce((r, o) => {\n      r[o.Location] = r[o.Location]? r[o.Location] + parseInt(o[\"Total Number of Victims\"]): parseInt(o[\"Total Number of Victims\"]);\n      return r;\n    }, {});\n    this.circleColor = scaleQuantize({\n      domain: [1, ...new Set(Object.values(this.locationToVictimsCount))],\n      range: d3.schemeReds[9]\n    });\n  }\n\n  componentDidMount() {\n    // extract just the names and Ids\n    var map_svg = d3.select(\"#map_with_locations\");\n    var projection = d3.geoAlbersUsa();\n    var path = d3.geoPath().projection(projection);\n    const states = topojson.feature(this.us, this.us.objects.states).features;\n    projection.scale(1000);\n\n    map_svg\n      .selectAll(\"path\")\n      .data(states)\n      .enter()\n      .append(\"path\")\n      .attr(\"class\", \"feature\")\n      .style(\"fill\", \"lightblue\")\n      .style(\"stroke\", \"black\")\n      .style(\"stroke-width\", \"0.5\")\n      .attr(\"d\", path)\n\n    map_svg\n      .selectAll(\"circle\")\n      .data(this.data)\n      .enter()\n      .append(\"circle\")\n      .attr(\"cx\", function(d) {\n        return projection([\n          parseFloat(d[\"Longitude\"]),\n          parseFloat(d[\"Latitude\"])\n        ])[0];\n      })\n      .attr(\"cy\", function(d) {\n        return projection([\n          parseFloat(d[\"Longitude\"]),\n          parseFloat(d[\"Latitude\"])\n        ])[1];\n      })\n      .attr(\"r\", d => {\n        return (parseFloat(this.locationToShootingsCount[d[\"Location\"]]) * 3).toString() + \"px\";\n      })\n      .attr(\"fill\", d => this.circleColor(this.locationToVictimsCount[d[\"Location\"]]))\n      .style(\"stroke-width\", 1.5)\n      .append(\"title\")\n      .text(d => {\n        return `${d[\"Location\"].split(' ')\n        .map((s) => s.charAt(0).toUpperCase() + s.substring(1))\n        .join(' ')}\\nShootings: ${this.locationToShootingsCount[d[\"Location\"]]}\\nVictims: ${this.locationToVictimsCount[d[\"Location\"]]}`;\n      });\n  }\n\n  render() {\n    return (\n      <div id=\"section1\" className=\"card text-center\">\n      <h3>Mass Shootings Across Locations by Number of Shootings & Number of Victims</h3>\n        <svg id=\"map_with_locations\" width={this.width} height={this.height} />\n      </div>\n    );\n  }\n}\n\nexport default MapLocations;\n","import React from 'react';\nimport Slider from '@material-ui/lab/Slider';\n\nclass StepSlider extends React.Component {\n  state = {\n    value: 0,\n  };\n\n  handleChange = (event, value) => {\n    this.setState({ value });\n    this.props.changeMap(value)\n  };\n\n  render() {\n    const { value } = this.state;    \n    return (\n      <div className=\"root\">\n        <p style={{fontSize:\"0.6em\"}}>Move Slider to to view the data by State or by Location</p>\n        <Slider\n          value={value}\n          min={0}\n          max={1}\n          step={1}\n          onChange={this.handleChange}\n          style={{width: \"50px\", margin: \"0 auto\", marginTop: \"20px\"}}\n        />\n      </div>\n    );\n  }\n}\n\nexport default StepSlider\n","import React, { Component } from \"react\";\nimport { BarStack } from \"@vx/shape\";\nimport { Group } from \"@vx/group\";\nimport { Grid } from \"@vx/grid\";\nimport { AxisBottom, AxisLeft } from \"@vx/axis\";\nimport { scaleBand, scaleLinear, scaleOrdinal } from \"@vx/scale\";\nimport { withTooltip, Tooltip } from \"@vx/tooltip\";\nimport { LegendOrdinal } from \"@vx/legend\";\n\nclass StackedBarChart extends Component {\n  constructor(props) {\n    super(props);\n\n    this.brown1 = \"#fdae6b\";\n    this.brown2 = \"#e6550d\";\n    // this.purple3 = \"#a44afe\";\n    this.bg = \"#eaedff\";\n\n    const majorStates = [\"california\", \"florida\", \"texas\", \"colorado\", \"georgia\", \"new york\"]\n    this.data = this.props.data.reduce((r, o) => {\n        if(majorStates.includes(o.State)) {\n            if(!r[o.State]){\n                r[o.State] = {}\n                r[o.State][\"state\"] = o.State.split(' ')\n                .map((s) => s.charAt(0).toUpperCase() + s.substring(1))\n                .join(' ');\n                r[o.State][\"civilian_fatalities\"] = parseInt(o[\"Number of Civilian Fatalities\"])\n                r[o.State][\"civilian_injured\"] = parseInt(o[\"Number of Civilian Injured\"])\n            } else {\n                r[o.State][\"civilian_fatalities\"] = r[o.State][\"civilian_fatalities\"] + parseInt(o[\"Number of Civilian Fatalities\"])\n                r[o.State][\"civilian_injured\"] = r[o.State][\"civilian_injured\"] + parseInt(o[\"Number of Civilian Injured\"])\n            }\n        }\n        return r\n    }, {})\n    this.data = Object.values(this.data)\n    this.keys = Object.keys(this.data[0]).filter(d => d !== \"state\" && d !== \"total_victims\");\n\n    const totals = this.data.map(d => d[\"civilian_injured\"] + d[\"civilian_fatalities\"]);\n    // accessors\n    this.x = d => d.state;\n\n    // scales\n    this.xScale = scaleBand({\n      domain: this.data.map(this.x),\n      padding: 0.2\n    });\n    this.yScale = scaleLinear({\n      domain: [0, Math.max(...totals)],\n      nice: true\n    });\n    this.color = scaleOrdinal({\n      domain: this.keys,\n      range: [this.brown2, this.brown1]\n    });\n\n    this.tooltipTimeout = 10000;\n\n    this.width = 800\n    this.height = 500\n    this.margin = {\n        top: 40,\n        left: 70\n    }\n    // this.tooltipOpen = true\n    // this.tooltipLeft = 20\n    // this.tooltipTop = 10\n    // this.tooltipData = {}\n    // this.hideTooltip = () => {}\n    // this.showTooltip = () => {}\n    this.xMax = this.width- this.margin.left + 30;\n    this.yMax = this.height - this.margin.top - 100;\n\n    this.xScale.rangeRound([0, this.xMax]);\n    this.yScale.range([this.yMax, 0]);\n  }\n  render() {\n    return (\n    <div>\n      <h3>Proportion of Injuries vs Fatalities in the Top 5 States</h3>\n      <div style={{ position: \"relative\" }}>\n        <svg width={this.width} height={this.height}>\n          <rect x={0} y={0} width={this.width} height={this.height} fill={this.bg} rx={14} />\n          <Grid\n            top={this.margin.top}\n            left={this.margin.left}\n            right={this.width-this.margin.left}\n            xScale={this.xScale}\n            yScale={this.yScale}\n            width={this.xMax}\n            height={this.yMax}\n            stroke={\"black\"}\n            strokeOpacity={0.1}\n            xOffset={this.xScale.bandwidth() / 2}\n          />\n          <Group top={this.margin.top} left={this.margin.left}>\n            <BarStack\n              data={this.data}\n              keys={this.keys}\n              x={this.x}\n              xScale={this.xScale}\n              yScale={this.yScale}\n              color={this.color}\n            >\n              {(barStacks) => {\n                return barStacks.map(barStack => {\n                  return barStack.bars.map(bar => {\n                    return (\n                      <rect\n                        key={`bar-stack-${barStack.index}-${bar.index}`}\n                        x={bar.x}\n                        y={bar.y}\n                        height={bar.height}\n                        width={50}\n                        fill={bar.color}\n                        onClick={event => {\n                          alert(`clicked: ${JSON.stringify(bar)}`);\n                        }}\n                        // onMouseLeave={event => {\n                        //   this.tooltipTimeout = setTimeout(() => {\n                        //     this.hideTooltip();\n                        //   }, 300);\n                        // }}\n                        // onMouseMove={event => {\n                        //   if (this.tooltipTimeout) clearTimeout(this.tooltipTimeout);\n                        //   const top = event.clientY - this.margin.top - bar.height;\n                        //   const offset =\n                        //     (this.xScale.paddingInner() * this.xScale.step()) / 2;\n                        //   const left = bar.x + bar.width + offset;\n                        //   this.showTooltip({\n                        //     tooltipData: bar,\n                        //     tooltipTop: top,\n                        //     tooltipLeft: left\n                        //   });\n                        // }}\n                      />\n                    );\n                  });\n                });\n              }}\n            </BarStack>\n          </Group>\n          <Group>\n\n          <AxisLeft\n              top={this.margin.top}\n              left={this.margin.left}\n              scale={this.yScale}\n              hideZero\n              label=\"Number of Victims Per 1M People\"\n              labelProps={{\n                fill: this.purple3,\n                textAnchor: \"middle\",\n                fontSize: 11,\n                fontFamily: \"Arial\"\n              }}\n              tickLabelProps={(value, index) => ({\n                fill: this.purple3,\n                textAnchor: \"end\",\n                fontSize: 10,\n                fontFamily: \"Arial\",\n                dx: \"-0.25em\",\n                dy: \"0.25em\"\n              })}\n              stroke={this.purple3}\n              tickStroke={this.purple3}\n              tickComponent={({ formattedValue, ...tickProps }) => (\n                <text {...tickProps}>{formattedValue}</text>\n              )}\n            />\n          <AxisBottom\n            top={this.yMax + this.margin.top}\n            left={this.margin.left-20}\n            scale={this.xScale}\n            stroke={this.purple3}\n            tickStroke={this.purple3}\n            tickLabelProps={(value, index) => ({\n                fill: this.purple3,\n                fontSize: 11,\n                textAnchor: \"middle\"\n            })}\n            />\n            </Group>\n        </svg>\n        <div\n          style={{\n              position: \"absolute\",\n              top: this.margin.top / 2 - 10,\n            width: \"100%\",\n            display: \"flex\",\n            justifyContent: \"center\",\n            fontSize: \"14px\"\n          }}\n        >\n          <LegendOrdinal\n            scale={this.color}\n            direction=\"row\"\n            labelMargin=\"0 15px 0 0\"\n          />\n        </div>\n        {/* {this.tooltipOpen && (\n          <Tooltip\n            top={this.tooltipTop}\n            left={this.tooltipLeft}\n            style={{\n              minWidth: 60,\n              backgroundColor: \"rgba(0,0,0,0.9)\",\n              color: \"white\"\n            }}\n          >\n            <div style={{ color: this.color(this.tooltipData.key) }}>\n              <strong>{this.tooltipData.key}</strong>\n            </div>\n            <div>{this.tooltipData.bar.data[this.tooltipData.key]}℉</div>\n            <div>\n              <small>{this.formatDate(this.x(this.tooltipData.bar.data))}</small>\n            </div>\n          </Tooltip>\n        )} */}\n      </div>\n      </div>\n    );\n  }\n}\nexport default withTooltip(StackedBarChart)","import React, { Component } from \"react\";\nimport { Bar } from \"@vx/shape\";\nimport { Group } from \"@vx/group\";\nimport { Grid } from \"@vx/grid\";\nimport * as d3 from \"d3\";\nimport { AxisBottom, AxisLeft } from \"@vx/axis\";\nimport { scaleBand, scaleLinear } from \"@vx/scale\";\n\nclass BarChart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mapIndex: 1\n    };\n    this.bg = \"#eaedff\";\n    let ageToNumberOfShootings = this.props.data.reduce((r, o) => {\n      r[o[\"Average Shooter Age\"]] = r[o[\"Average Shooter Age\"]] ? r[o[\"Average Shooter Age\"]] : { age: o[\"Average Shooter Age\"], number: 0 };\n      r[o[\"Average Shooter Age\"]][\"number\"] = r[o[\"Average Shooter Age\"]][\"number\"] + 1;\n      return r;\n    }, {});\n\n    let ageToNumberOfVictims = this.props.data.reduce((r, o) => {\n      r[o[\"Average Shooter Age\"]] = r[o[\"Average Shooter Age\"]] ? r[o[\"Average Shooter Age\"]] : { age: o[\"Average Shooter Age\"], number: 0 };\n      r[o[\"Average Shooter Age\"]][\"number\"] = r[o[\"Average Shooter Age\"]][\"number\"] + parseInt(o[\"Total Number of Victims\"]);\n      return r;\n    }, {});\n\n    const ageRanges = [10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65];\n    const ageToNumberOfShootingsBinned = {};\n    for (let obj of Object.values(ageToNumberOfShootings)) {\n      const ageIndex = Math.floor(parseInt(obj[\"age\"]) / 5) - 2;\n      let ageRange = \"\";\n      if (ageIndex >= 0 && ageIndex < ageRanges.length - 1) {\n        ageRange = `${ageRanges[ageIndex]}-${ageRanges[ageIndex + 1] - 1}`;\n      } else if (ageIndex >= ageRanges.length - 1) {\n        ageRange = `${ageRanges[ageRanges.length - 1]}+`;\n      }\n      ageToNumberOfShootingsBinned[ageRange] = ageToNumberOfShootingsBinned[\n        ageRange\n      ]\n        ? ageToNumberOfShootingsBinned[ageRange]\n        : { ageRange, number: 0 };\n      ageToNumberOfShootingsBinned[ageRange].number =\n        ageToNumberOfShootingsBinned[ageRange].number + obj[\"number\"];\n    }\n\n    const ageToNumberOfVictimsBinned = {};\n    for (let obj of Object.values(ageToNumberOfVictims)) {\n      const ageIndex = Math.floor(parseInt(obj[\"age\"]) / 5) - 2;\n      let ageRange = \"\";\n      if (ageIndex >= 0 && ageIndex < ageRanges.length - 1) {\n        ageRange = `${ageRanges[ageIndex]}-${ageRanges[ageIndex + 1] - 1}`;\n      } else if (ageIndex >= ageRanges.length - 1) {\n        ageRange = `${ageRanges[ageRanges.length - 1]}+`;\n      }\n      ageToNumberOfVictimsBinned[ageRange] = ageToNumberOfVictimsBinned[\n        ageRange\n      ]\n        ? ageToNumberOfVictimsBinned[ageRange]\n        : { ageRange, number: 0 };\n      ageToNumberOfVictimsBinned[ageRange].number =\n        ageToNumberOfVictimsBinned[ageRange].number + obj[\"number\"];\n    }\n\n    ageToNumberOfShootings = Object.values(ageToNumberOfShootingsBinned);\n    ageToNumberOfVictims = Object.values(ageToNumberOfVictimsBinned);\n\n    this.data = [ageToNumberOfShootings, ageToNumberOfVictims];\n    // accessors\n    this.x = d => d.ageRange;\n    this.y = d => d.number;\n\n    this.width = 500;\n    this.height = 400;\n    this.margin = {\n      left: 55,\n      right: 10,\n      top: 40,\n      bottom: 0\n    };\n    // bounds\n    this.xMax = this.width - this.margin.left;\n    this.yMax = this.height - 100;\n\n    // scales\n    this.xScale = [\n      scaleBand({\n        rangeRound: [0, this.xMax],\n        domain: this.data[0].map(this.x),\n        padding: 0.4\n      }),\n      scaleBand({\n        rangeRound: [0, this.xMax],\n        domain: this.data[1].map(this.x),\n        padding: 0.4\n      })\n    ];\n    this.yScale = [\n      scaleLinear({\n        rangeRound: [this.yMax, 0],\n        domain: [0, Math.max(...this.data[0].map(this.y))]\n      }),\n      scaleLinear({\n        rangeRound: [this.yMax, 0],\n        domain: [0, Math.max(...this.data[1].map(this.y))]\n      })\n    ];\n    this.colorScale = [\n      scaleLinear({\n        domain: [0, Math.max(...this.data[0].map(this.y))],\n        range: [d3.rgb(\"red\").brighter(), d3.rgb(\"red\").darker()]\n      }),\n      scaleLinear({\n        domain: [0, Math.max(...this.data[1].map(this.y))],\n        range: [d3.rgb(\"red\").brighter(), d3.rgb(\"red\").darker()]\n      })\n    ];\n  }\n  render() {\n    return (\n      <div>\n          <h3>Age Groups of Shooters</h3>\n        <svg width={this.width} height={this.height}>\n          <rect\n            x={0}\n            y={0}\n            width={this.width}\n            height={this.height}\n            fill={this.bg}\n            rx={14}\n          />\n          <Grid\n            top={this.margin.top}\n            left={this.margin.left}\n            xScale={this.xScale[0]}\n            yScale={this.yScale[0]}\n            width={this.xMax}\n            height={this.yMax}\n            stroke={\"black\"}\n            strokeOpacity={0.1}\n            xOffset={this.xScale[0].bandwidth() / 2}\n          />\n          <Group top={this.margin.top} left={this.margin.left}>\n            {this.data[0].map((d, i) => {\n              const age = this.x(d);\n              const barWidth = this.xScale[0].bandwidth();\n              const barHeight = this.yMax - this.yScale[0](this.y(d));\n              const barX = this.xScale[0](age);\n              const barY = this.yMax - barHeight;\n              return (\n                <Bar\n                  key={`bar-${age}`}\n                  x={barX}\n                  y={barY}\n                  width={barWidth}\n                  height={barHeight}\n                  fill={this.colorScale[0](this.y(d))}\n                  onClick={event => {\n                    alert(`clicked: ${JSON.stringify(Object.values(d))}`);\n                  }}\n                />\n              );\n            })}\n          </Group>\n          <Group top={this.margin.top} left={this.margin.left}>\n            <AxisLeft\n              top={0}\n              left={0}\n              scale={this.yScale[0]}\n              hideZero\n              label=\"Number of Shootings\"\n              labelProps={{\n                fill: \"steelblue\",\n                textAnchor: \"middle\",\n                fontSize: 11,\n                fontFamily: \"Arial\"\n              }}\n              tickLabelProps={(value, index) => ({\n                fill: \"steelblue\",\n                textAnchor: \"end\",\n                fontSize: 10,\n                fontFamily: \"Arial\",\n                dx: \"-0.25em\",\n                dy: \"0.25em\"\n              })}\n              stroke=\"steelblue\"\n              tickStroke=\"steelblue\"\n              tickComponent={({ formattedValue, ...tickProps }) => (\n                <text {...tickProps}>{formattedValue}</text>\n              )}\n            />\n            <AxisBottom\n              top={this.yMax}\n              scale={this.xScale[0]}\n              stroke=\"steelblue\"\n              label=\"Age Groups\"\n              labelProps={{\n                fill: \"steelblue\",\n                textAnchor: \"middle\",\n                fontSize: 11,\n                fontFamily: \"Arial\"\n              }}\n              tickStroke={\"steelblue\"}\n              tickLabelProps={(value, index) => ({\n                fill: \"steelblue\",\n                fontSize: 11,\n                textAnchor: \"middle\"\n              })}\n            />\n          </Group>\n        </svg>\n        <svg width={this.width} height={this.height}>\n          <rect\n            x={0}\n            y={0}\n            width={this.width}\n            height={this.height}\n            fill={this.bg}\n            rx={14}\n          />\n          <Grid\n            top={this.margin.top}\n            left={this.margin.left}\n            xScale={this.xScale[1]}\n            yScale={this.yScale[1]}\n            width={this.xMax}\n            height={this.yMax}\n            stroke={\"black\"}\n            strokeOpacity={0.1}\n            xOffset={this.xScale[1].bandwidth() / 2}\n          />\n          <Group top={this.margin.top} left={this.margin.left}>\n            {this.data[1].map((d, i) => {\n              const age = this.x(d);\n              const barWidth = this.xScale[1].bandwidth();\n              const barHeight = this.yMax - this.yScale[1](this.y(d));\n              const barX = this.xScale[1](age);\n              const barY = this.yMax - barHeight;\n              return (\n                <Bar\n                  key={`bar-${age}`}\n                  x={barX}\n                  y={barY}\n                  width={barWidth}\n                  height={barHeight}\n                  fill={this.colorScale[1](this.y(d))}\n                  onClick={event => {\n                    alert(`clicked: ${JSON.stringify(Object.values(d))}`);\n                  }}\n                />\n              );\n            })}\n          </Group>\n          <Group top={this.margin.top} left={this.margin.left}>\n            <AxisLeft\n              top={0}\n              left={0}\n              scale={this.yScale[1]}\n              hideZero\n              label=\"Number of Victims\"\n              labelProps={{\n                fill: \"steelblue\",\n                textAnchor: \"middle\",\n                fontSize: 11,\n                fontFamily: \"Arial\"\n              }}\n              tickLabelProps={(value, index) => ({\n                fill: \"steelblue\",\n                textAnchor: \"end\",\n                fontSize: 10,\n                fontFamily: \"Arial\",\n                dx: \"-0.25em\",\n                dy: \"0.25em\"\n              })}\n              stroke={\"steelblue\"}\n              tickStroke={\"steelblue\"}\n              tickComponent={({ formattedValue, ...tickProps }) => (\n                <text {...tickProps}>{formattedValue}</text>\n              )}\n            />\n            <AxisBottom\n              top={this.yMax}\n              scale={this.xScale[1]}\n              stroke={\"steelblue\"}\n              label={\"Age Groups\"}\n              labelProps={{\n                fill: \"steelblue\",\n                textAnchor: \"middle\",\n                fontSize: 11,\n                fontFamily: \"Arial\"\n              }}\n              tickStroke={\"steelblue\"}\n              tickLabelProps={(value, index) => ({\n                fill: \"steelblue\",\n                fontSize: 11,\n                textAnchor: \"middle\"\n              })}\n            />\n          </Group>\n        </svg>\n      </div>\n    );\n  }\n}\nexport default BarChart;\n","import React from \"react\";\nimport * as d3 from \"d3\";\nimport { Group } from \"@vx/group\";\nimport BubbleChart from \"@weknow/react-bubble-chart-d3\";\n// import Actions          from '../Actions';\n\nclass BubbleChartRace extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.data = this.props.data.reduce((r, o) => {\n      r[o[\"Shooter Race\"]] = r[o[\"Shooter Race\"]] ? \n      r[o[\"Shooter Race\"]] \n      : { label: o[\"Shooter Race\"].split(\"or\")[0].trim().split(' ')\n      .map((s) => s.charAt(0).toUpperCase() + s.substring(1))\n      .join(' '), value: 0 };\n      r[o[\"Shooter Race\"]].value += 1;\n      return r;\n    }, {});\n    this.data = Object.values(this.data);\n    this.x = d => d.value;\n    this.xMin = Math.min(...this.data.map(this.x));\n    this.xMax = Math.max(...this.data.map(this.x));\n  }\n\n  bubbleClick = label => {\n    console.log(\"Custom bubble click func\");\n  };\n  legendClick = label => {\n    console.log(\"Customer legend click func\");\n  };\n  render() {\n    console.log(this.data);\n    return (\n        <div>\n        <h3>Comparing Ethnicities of the Shooters</h3>\n        <BubbleChart\n          // graph={{\n          //   zoom: 1,\n          //   offsetX: -0.05,\n          //   offsetY: -0.01\n          // }}\n          style={{\n            width: \"900px\",\n            height: \"500px\",\n            marginLeft: 35\n          }}\n          width={600}\n          height={500}\n          showLegend={true} // optional value, pass false to disable the legend.\n          legendPercentage={20} // number that represent the % of with that legend going to use.\n          legendFont={{\n            family: \"Arial\",\n            size: 10,\n            color: \"#000\"\n          }}\n          valueFont={{\n            family: \"Arial\",\n            size: 11,\n            color: \"#fff\"\n          }}\n          labelFont={{\n            family: \"Arial\",\n            size: 12,\n            color: \"#fff\"\n          }}\n          //Custom bubble/legend click functions such as searching using the label, redirecting to other page\n          bubbleClickFunc={this.bubbleClick}\n          legendClickFun={this.legendClick}\n          data={this.data}\n        />\n        </div>\n    );\n  }\n}\n\nexport default BubbleChartRace;\n","import React, { Component } from \"react\";\nimport { Bar, Line } from \"@vx/shape\";\nimport { Group } from \"@vx/group\";\nimport { Grid } from \"@vx/grid\";\nimport { AxisBottom, AxisLeft } from \"@vx/axis\";\nimport { scaleBand, scaleLinear } from \"@vx/scale\";\n\nclass BarChartMentalIllness extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mapIndex: 1\n    };\n    this.bg = \"#eaedff\";\n    let motiveToNumberOfShootings = this.props.data.reduce((r, o) => {\n      r[o[\"Possible Motive - General\"]] = r[o[\"Possible Motive - General\"]]\n        ? r[o[\"Possible Motive - General\"]]\n        : { motive: o[\"Possible Motive - General\"], number: 0 };\n      r[o[\"Possible Motive - General\"]][\"number\"] =\n        r[o[\"Possible Motive - General\"]][\"number\"] + 1;\n      return r;\n    }, {});\n\n    this.data = Object.values(motiveToNumberOfShootings).sort((a,b) => b.number - a.number);    \n    this.x = d => d.motive;\n    this.y = d => d.number;\n\n    this.width = 500;\n    this.height = 550;\n    this.margin = {\n      left: 55,\n      right: 10,\n      top: 40,\n      bottom: 0\n    };\n    // bounds\n    this.xMax = this.width - this.margin.left;\n    this.yMax = this.height - 200;\n\n    // scales\n    this.xScale = scaleBand({\n      rangeRound: [0, this.xMax],\n      domain: this.data.map(this.x),\n      padding: 0.4\n    });\n    this.yScale = scaleLinear({\n      rangeRound: [this.yMax, 0],\n      domain: [0, Math.max(...this.data.map(this.y))]\n    });\n\n  }\n\n  color(data){\n    if(data.motive === \"mental illness\") {\n      return \"#54278f\"\n    } else {\n      return \"#bcbddc\"\n    }\n  }\n\n  opacity(data){\n    if(data.motive === \"mental illness\") {\n      return 1.5\n    } else {\n      return 0.7\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <h3>Possible Motives Behind The Shootings</h3>\n        <svg width={this.width} height={this.height}>\n          <rect\n            x={0}\n            y={0}\n            width={this.width}\n            height={this.height}\n            fill={this.bg}\n            rx={14}\n          />\n          <Grid\n            top={this.margin.top}\n            left={this.margin.left}\n            xScale={this.xScale}\n            yScale={this.yScale}\n            width={this.xMax}\n            height={this.yMax}\n            stroke={\"black\"}\n            strokeOpacity={0.1}\n            xOffset={this.xScale.bandwidth() / 2}\n          />\n          <Group top={this.margin.top} left={this.margin.left}>\n            {this.data.map((d, i) => {\n              const age = this.x(d);\n              const barWidth = this.xScale.bandwidth();\n              const barHeight = this.yMax - this.yScale(this.y(d));\n              const barX = this.xScale(age);\n              const barY = this.yMax - barHeight;\n              return (\n                <Bar\n                  key={`bar-${age}`}\n                  x={barX}\n                  y={barY}\n                  width={barWidth}\n                  height={barHeight}\n                  fill={this.color(d)}\n                  opacity={this.opacity(d)}\n                  onClick={event => {\n                    alert(`clicked: ${JSON.stringify(Object.values(d))}`);\n                  }}\n                />\n              );\n            })}\n          </Group>\n          <Group top={this.margin.top} left={this.margin.left}>\n            <AxisLeft\n              top={0}\n              left={0}\n              scale={this.yScale}\n              hideZero\n              label=\"Number of Shootings\"\n              labelProps={{\n                fill: \"steelblue\",\n                textAnchor: \"middle\",\n                fontSize: 11,\n                fontFamily: \"Arial\"\n              }}\n              tickLabelProps={(value, index) => ({\n                fill: \"steelblue\",\n                textAnchor: \"end\",\n                fontSize: 10,\n                fontFamily: \"Arial\",\n                dx: \"-0.25em\",\n                dy: \"0.25em\"\n              })}\n              stroke=\"steelblue\"\n              tickStroke=\"steelblue\"\n              tickComponent={({ formattedValue, ...tickProps }) => (\n                <text {...tickProps}>{formattedValue}</text>\n              )}\n            />\n            {/* <AxisBottom\n              top={this.yMax}\n              scale={this.xScale}\n              stroke=\"steelblue\"\n              label=\"Age Groups\"\n              labelProps={{\n                fill: \"steelblue\",\n                textAnchor: \"middle\",\n                fontSize: 11,\n                fontFamily: \"Arial\"\n              }}\n              tickStroke={\"steelblue\"}\n              tickLabelProps={(value, index) => ({\n                fill: \"steelblue\",\n                fontSize: 11,\n                textAnchor: \"middle\"\n              })}\n            /> */}\n            <AxisBottom\n              top={this.yMax}\n              left={0}\n              scale={this.xScale}\n              numTicks={18}\n              stroke=\"#1b1a1e\"\n              label=\"Motives\"\n            >\n              {axis => {\n                const tickLabelSize = 10;\n                const tickRotate = -90;\n                const tickColor = \"#8e205f\";\n                const axisCenter = this.width/2 - this.margin.left\n                return (\n                  <g className=\"my-custom-bottom-axis\">\n                    {axis.ticks.map((tick, i) => {\n                      const tickX = tick.to.x;\n                      const tickY = tick.to.y + tickLabelSize + axis.tickLength;\n                      return (\n                        <Group\n                          key={`vx-tick-${tick.value}-${i}`}\n                          className={\"vx-axis-tick\"}\n                        >\n                          <Line\n                            from={tick.from}\n                            to={tick.to}\n                            stroke={tickColor}\n                          />\n                          <text\n                            transform={`translate(${tickX}, ${tickY-10}) rotate(${tickRotate})`}\n                            fontSize={tickLabelSize}\n                            textAnchor=\"end\"\n                            fill={tickColor}\n                          >\n                            {tick.formattedValue}\n                          </text>\n                        </Group>\n                      );\n                    })}\n                    <text\n                      textAnchor=\"middle\"\n                      transform={`translate(${axisCenter}, 110)`}\n                      fontSize=\"12\"\n                      fill=\"#8e205f\"\n                      fontWeight=\"bold\"\n                    >\n                      {\"Motives\"}\n                    </text>\n                  </g>\n                );\n              }}\n            </AxisBottom>\n          </Group>\n        </svg>\n        \n      </div>\n    );\n  }\n}\nexport default BarChartMentalIllness;\n","import React from \"react\";\nimport * as d3 from \"d3\";\nimport { Group } from \"@vx/group\";\nimport BubbleChart from \"@weknow/react-bubble-chart-d3\";\n// import Actions          from '../Actions';\n\nclass BubbleChartWeapons extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.data = this.props.data.reduce((r, o) => {\n      r[o[\"Type of Gun - General\"]] = r[o[\"Type of Gun - General\"]] ? \n      r[o[\"Type of Gun - General\"]] : { label: o[\"Type of Gun - General\"].split(' ')\n      .map((s) => s.charAt(0).toUpperCase() + s.substring(1))\n      .join(' '), value: 0 };\n      r[o[\"Type of Gun - General\"]].value += 1;\n      return r;\n    }, {});\n    this.data = Object.values(this.data).sort((a,b) => b.value - a.value);\n    this.x = d => d.value;\n    this.xMin = Math.min(...this.data.map(this.x));\n    this.xMax = Math.max(...this.data.map(this.x));\n  }\n\n  bubbleClick = label => {\n    console.log(\"Custom bubble click func\");\n  };\n  legendClick = label => {\n    console.log(\"Customer legend click func\");\n  };\n  render() {\n    console.log(this.data);\n    return (\n        <div>\n        <h3>Weaons Most Used In Shootings</h3>\n        <BubbleChart\n          // graph={{\n          //   zoom: 1,\n          //   offsetX: -0.05,\n          //   offsetY: -0.01\n          // }}\n          style={{\n            width: \"900px\",\n            height: \"500px\",\n            marginLeft: 35\n          }}\n          width={600}\n          height={500}\n          showLegend={true} // optional value, pass false to disable the legend.\n          legendPercentage={20} // number that represent the % of with that legend going to use.\n          legendFont={{\n            family: \"Arial\",\n            size: 10,\n            color: \"#000\"\n          }}\n          valueFont={{\n            family: \"Arial\",\n            size: 11,\n            color: \"#fff\"\n          }}\n          labelFont={{\n            family: \"Arial\",\n            size: 12,\n            color: \"#fff\"\n          }}\n          //Custom bubble/legend click functions such as searching using the label, redirecting to other page\n          bubbleClickFunc={this.bubbleClick}\n          legendClickFun={this.legendClick}\n          data={this.data}\n        />\n        </div>\n    );\n  }\n}\n\nexport default BubbleChartWeapons;\n","import React, { Component } from 'react'\nimport './App.css'\nimport * as d3 from \"d3-fetch\"\nimport * as moment from 'moment'\nimport Typography from \"@material-ui/core/Typography\"\nimport ReactCSSTransitionReplace from 'react-css-transition-replace';\nimport AreaChart from './components/AreaChart'\nimport MapStates from './components/MapStates'\nimport MapLocations from  './components/MapLocations'\nimport StepSlider from \"./components/MapSlider\"\nimport StackedBarChart from \"./components/StackedBarChart\"\nimport BarChart from \"./components/BarChart\"\nimport BubbleChartRace from \"./components/BubbleChart\"\nimport BarChartMentalIllness from \"./components/BarChartMentalIllness\"\nimport BubbleChartWeapons from \"./components/BubbleChartWeapons\"\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    \n    this.state = {\n      data: [],\n      map: {}\n    }\n    \n    \n  }\n  componentDidMount(){\n    this.getCSVData()\n    // this.getUSMapData()\n  }\n  getMap(value, data){\n    const maps = {\n      0: (<div key =\"map_states\" className=\"map_shootings_by_state\">\n      <MapStates data={data} />\n    </div>),\n      1: (<div key=\"map_locations\" className=\"map_shootings_by_city\">\n        <MapLocations data={data} />\n      </div>),\n    }\n    return maps[value];\n  }\n\n  changeMap(value) {\n    this.setState({\n      map: this.getMap(value, this.state.data)\n    })\n  }\n  \n  getCSVData() {\n    const cleanDatum = (datum) => {\n      datum.Year = moment(datum.Date).utc().year()\n      for(let i of Object.keys(datum)){\n        if(typeof(datum[i]) === 'string'){\n          datum[i] = datum[i].trim().toLowerCase()\n        } \n        if(i === \"Average Shooter Age\") {\n          datum[i] = parseInt(Math.round(parseFloat(datum[i]))) || 25\n        } else if(i === \"History of Mental Illness - General\") {\n          const mentalIllnessHistoryTypes = [\"yes\", \"no\", \"unknown\"]\n          if(!mentalIllnessHistoryTypes.includes(datum[i])) {\n            datum[i] = \"unknown\"\n          }\n        } else if(i === \"Number of shooters\"){\n          datum[i] = datum[i] === \"\" ? \"unknown\" : datum[i]\n        }\n        this.objectVals[i] = this.objectVals[i] ? this.objectVals[i].add(datum[i]) : new Set([datum[i]])\n      }\n      return datum\n    }\n    d3.csv(\"https://nyu-vis-fall2018.github.io/storytelling-group-15/iv_proj/src/data/Stanford_MSA_cleaned.csv\").then(csvData => {\n      this.objectVals = {}\n      const data = csvData.map(datum => {\n        return cleanDatum(datum)\n      })\n      this.setState({\n        data,\n        map: this.getMap(0, data)\n      })\n    })\n  }\n  \n  render() {\n    return (\n      <div className=\"App\">\n        <div style={{height:'50%',\n          width: '100%',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'flex-start',\n          margin: '10.5em 0 auto 0',\n          float: 'left'}}>\n        <Typography variant=\"h2\" color=\"textPrimary\">The Mass Shooting Crisis in the US</Typography>\n        </div>\n        <Typography variant=\"subtitle\" color=\"textSecondary\" style={{fontSize: '14px', marginBottom: '2.5em'}}>Why has the number of mass shootings gone up in the United States in recent years, <br/> and can the problem even be resolved? </Typography>\n        \n        <hr width=\"50%\" style={{opacity:\"0.5\", marginBottom: '11em'}}/>\n        { this.state.data.length > 0 && \n          <div className=\"visualizations\">\n            <div className=\"year_to_shootings_count_area\">\n              {/* <strong>Number of Shootings Annually in the United States from 1966 to 2016</strong> */}\n              <AreaChart data={this.state.data} />\n            </div>\n            <StepSlider classes={{  root: \"root\" }} changeMap={this.changeMap.bind(this)}/>\n            {/* <ReactCSSTransitionReplace\n              transitionName=\"cross-fade\"\n              transitionEnterTimeout={500}\n              transitionLeaveTimeout={300}> */}\n              {this.state.map}\n            {/* </ReactCSSTransitionReplace> */}\n            <StackedBarChart data={this.state.data}/>\n            <BarChart data={this.state.data} />\n            <BubbleChartRace data={this.state.data} />\n            <BarChartMentalIllness data={this.state.data} />\n            <BubbleChartWeapons data = {this.state.data} />\n          </div>\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}